{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://todo-list/./src/style.css","webpack://todo-list/./node_modules/css-loader/dist/runtime/api.js","webpack://todo-list/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://todo-list/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://todo-list/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://todo-list/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://todo-list/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://todo-list/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://todo-list/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://todo-list/webpack/bootstrap","webpack://todo-list/webpack/runtime/compat get default export","webpack://todo-list/webpack/runtime/define property getters","webpack://todo-list/webpack/runtime/hasOwnProperty shorthand","webpack://todo-list/webpack/runtime/nonce","webpack://todo-list/./src/style.css?7163","webpack://todo-list/./src/common/localStorage/index.js","webpack://todo-list/./src/models/enums/colours.js","webpack://todo-list/./src/models/enums/priority.js","webpack://todo-list/./src/models/enums/status.js","webpack://todo-list/./src/common/eventListeners/projectNavigationListeners.js","webpack://todo-list/./src/display/sidebar/sidebarProjectsGenerator.js","webpack://todo-list/./src/display/utility/actionButtons.js","webpack://todo-list/./src/common/eventListeners/actionButtonListeners/index.js","webpack://todo-list/./src/models/enums/actionButtons.js","webpack://todo-list/./src/common/eventListeners/utility/index.js","webpack://todo-list/./src/display/forms/radioFieldGenerator.js","webpack://todo-list/./src/models/enums/organizer.js","webpack://todo-list/./src/display/allProjectsPage/index.js","webpack://todo-list/./src/display/forms/formGenerator.js","webpack://todo-list/./src/display/forms/textFieldGenerator.js","webpack://todo-list/./src/common/eventListeners/formButtonListeners.js","webpack://todo-list/./src/models/organizers/project.js","webpack://todo-list/./src/display/projectPage/index.js","webpack://todo-list/./src/display/projectPage/stepsCardHandler.js","webpack://todo-list/./src/common/eventListeners/actionButtonListeners/stepActionButtonListeners.js","webpack://todo-list/./src/models/organizers/step.js","webpack://todo-list/./src/common/eventListeners/checkboxListeners.js","webpack://todo-list/./src/display/projectPage/tasksCardHandler.js","webpack://todo-list/./src/common/eventListeners/actionButtonListeners/taskActionButtonListeners.js","webpack://todo-list/./src/models/organizers/task.js","webpack://todo-list/./src/common/eventListeners/actionButtonListeners/projectActionButtonListeners.js","webpack://todo-list/./src/display/display.js","webpack://todo-list/./src/models/organizers/factories/stepFactory.js","webpack://todo-list/./src/models/organizers/factories/taskFactory.js","webpack://todo-list/./src/models/organizers/factories/projectFactory.js","webpack://todo-list/./src/index.js","webpack://todo-list/./src/display/sidebar/index.js","webpack://todo-list/./src/common/eventListeners/sidebarListeners.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root {\r\n    /* Common colours */\r\n    --white: #ffffff;\r\n    --black: #000000;\r\n\r\n    /* General page styling */\r\n    --sidebar-background: rgba(223, 163, 163, 0.3); /*rgba(255, 198, 112, 0.05)*/\r\n    --sidebar-text: rgb(0, 0, 0);\r\n    --sidebar-hover-background: rgba(191, 112, 255, 0.15); /*rgba(226, 112, 255, 0.5) rgba(255, 141, 112, 0.15)*/\r\n    --project-icon: rgba(177, 96, 231, 0.5);\r\n    --colour-picker-border: rgb(118, 118, 118);\r\n\r\n    /* Button styling */\r\n    --action-btn-background: var(--white);\r\n    --action-btn-hover-background: rgba(0, 0, 0, 0.1);\r\n    --submit-btn-background: rgb(0, 89, 255);\r\n\r\n    /* Shadows */\r\n    --dark-shadow: #00000040;\r\n    --light-shadow: #00000025;\r\n    --faint-shadow: #00000010;\r\n\r\n    /* Task priority indicators */\r\n    --input-highlight: #006eff;\r\n    --priority-high-text: #ae2e24;\r\n    --priority-high-background: #ffeceb;\r\n    --priority-med-text: #5e4db2;\r\n    --priority-med-background: #f3f0ff;\r\n    --priority-low-text: #0055cc;\r\n    --priority-low-background: #e9f2ff;\r\n    --priority-none-text: var(--black);\r\n    --priority-none-background: #f0f1f4;\r\n\r\n    /* Completed status indicators */\r\n    --completed-card-text: #6a6a6a;\r\n    --completed-card-background: rgb(210, 210, 210);\r\n}\r\n\r\n/*\r\n * ------------------------------------------------------------\r\n * General Styling\r\n * ------------------------------------------------------------\r\n */\r\n* {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody, textarea {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n}\r\n\r\nul {\r\n    list-style: none;\r\n}\r\n\r\nbutton {\r\n    cursor: pointer;\r\n}\r\n\r\ninput[type=\"checkbox\"],\r\ninput[type=\"radio\"] {\r\n    cursor: pointer;\r\n}\r\n\r\n.action-btns {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.2rem;\r\n}\r\n\r\n.action-btn {\r\n    cursor: pointer;\r\n    padding: 1rem;\r\n    border: 2px solid #00000099;\r\n    border-radius: 50%;\r\n    background-color: #ffffff00;\r\n}\r\n.action-btn:hover {\r\n    background-color: var(--action-btn-hover-background);\r\n}\r\n\r\n.disabled-action-btn {\r\n    cursor: default;\r\n    background-color: var(--completed-card-background)\r\n}\r\n.disabled-action-btn:hover {\r\n    background-color: var(--completed-card-background);\r\n}\r\n\r\n.icon {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: x-large;\r\n    height: 20px;\r\n    width: 20px;\r\n}\r\n\r\n/* Custom checkboxes */\r\ninput[type=\"checkbox\"] {\r\n    width: 2em;\r\n    height: 2em;\r\n    background-color: white;\r\n    border-radius: 50%;\r\n    vertical-align: middle;\r\n    border: 1px solid #ddd;\r\n    appearance: none;\r\n    -webkit-appearance: none;\r\n    outline: none;\r\n    cursor: pointer;\r\n}\r\ninput[type=\"checkbox\"]:checked {\r\n    background-color: var(--sidebar-hover-background);\r\n}\r\n\r\n/*\r\n * ------------------------------------------------------------\r\n * Page Layout Styling\r\n * ------------------------------------------------------------\r\n */\r\n\r\n.content {\r\n    box-sizing: content-box;\r\n    display: grid;\r\n    grid: 1fr 5fr / 1fr 4fr;\r\n    width: 100vw;\r\n    height: 100vh;\r\n}\r\n\r\n/*\r\n * ------------------------------------------------------------\r\n * Sidebar Styling\r\n * ------------------------------------------------------------\r\n */\r\n\r\n.sidebar {\r\n    grid-area: 1 / 1 / -1 / 2;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 2rem;\r\n    padding: 0 1rem;\r\n    color: var(--sideabar-text);\r\n    background-color: var(--sidebar-background);\r\n    z-index: 2;\r\n    overflow-y: auto;\r\n}\r\n\r\n.logo {\r\n    text-align: center;\r\n    padding-top: 1.5rem;\r\n}\r\n\r\n.sidebar-heading {\r\n    padding: 0.5rem 0 0.5rem 1.5rem;\r\n    font-weight: bold;\r\n}\r\n\r\n.sidebar-menu,\r\n.sidebar-projects-menu {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.2rem;\r\n    padding-left: 2rem;\r\n}\r\n\r\n.sidebar-item {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    padding: 0.8rem 0 0.8rem 1rem;\r\n    font-size: large;\r\n    border-radius: 10px;\r\n}\r\n\r\n.sidebar-item:hover {\r\n    cursor: pointer;\r\n    background-color: var(--sidebar-hover-background);\r\n}\r\n\r\n.project-icon {\r\n    color: var(--project-icon);\r\n    background-color: var(--project-icon);\r\n    border: 2px solid #00000099;\r\n    border-radius: 50%;\r\n}\r\n\r\n/*\r\n * ------------------------------------------------------------\r\n * Header Styling\r\n * ------------------------------------------------------------\r\n */\r\n\r\n.header {\r\n    grid-area: 1 / 2 / 2 / -1;\r\n    background-color: var(--white);\r\n    box-shadow: 0 10px 15px var(--light-shadow);\r\n    z-index: 1;\r\n}\r\n\r\n/*\r\n * ----------------------\r\n * All Projects Header Styling\r\n * ----------------------\r\n */\r\n.all-projects-header-container {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 3rem;\r\n    height: 100%;\r\n    border: 2px solid var(--black);\r\n    border-top: none;\r\n    border-right: none;\r\n}\r\n\r\n.create-project-header-btn {\r\n    padding: 2rem;\r\n}\r\n\r\n.create-project-header-btn > img {\r\n    height: 40px;\r\n    width: 40px;\r\n}\r\n/*\r\n * ----------------------\r\n * Project Header Styling\r\n * ----------------------\r\n */\r\n.project-header-container {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 3rem;\r\n    height: 100%;\r\n    border: 2px solid #000000;\r\n    border-top: none;\r\n    border-right: none;\r\n}\r\n\r\n.project-header-details {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: start;\r\n}\r\n\r\n.project-title-container {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n}\r\n\r\n/*\r\n * ------------------------------------------------------------\r\n * Form Styling\r\n * ------------------------------------------------------------\r\n */\r\n/*\r\n* ----------------------\r\n* General Form Styling\r\n* ----------------------\r\n*/\r\n.title-input:focus,\r\n.date-input:focus,\r\n.desc-input:focus {\r\n    outline: none;\r\n    border: 2px solid var(--input-highlight);\r\n} \r\n\r\n.modal {\r\n    display: none;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    z-index: 2;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: auto;\r\n    background-color: var(--dark-shadow);\r\n}\r\n\r\n.form-container {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 400px;\r\n    height: auto;\r\n    border: 2px solid black;\r\n    border-radius: 10px;\r\n    background-color: var(--white);\r\n    box-shadow: 0 10px 15px var(--light-shadow);\r\n} \r\n\r\n.create-edit-form,\r\n.delete-form,\r\n.colour-form {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    padding: 1rem 0;\r\n}\r\n\r\n.field-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.2rem;\r\n    width: 80%;\r\n}\r\n\r\n/*\r\n * ----------------------\r\n * Form Button Styling\r\n * ----------------------\r\n */ \r\n\r\n.form-btn-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    gap: 1rem;\r\n}\r\n\r\n.submit-btn {\r\n    width: 80%;\r\n    color: var(--white);\r\n    background-color: var(--submit-btn-background);\r\n}\r\n\r\n.cancel-btn {\r\n    color: var(--submit-btn-background);\r\n    background-color: var(--white);\r\n}\r\n\r\n.form-btn {\r\n    padding: 0.5rem 1rem;\r\n    border: 2px solid var(--submit-btn-background);\r\n}\r\n\r\n/*\r\n * ----------------------\r\n * Creation Form Styling\r\n * ----------------------\r\n */ \r\n.form-label {\r\n    color: rebeccapurple;\r\n}\r\n\r\n.title-input,\r\n.date-input {\r\n    height: 30px;\r\n}\r\n\r\n.desc-input {\r\n    resize: none;\r\n    height: 50px;\r\n    padding: 0.4rem 0;\r\n}\r\n\r\n.priority-field {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.3rem;\r\n    padding: 0.5rem;\r\n}\r\n \r\n/*\r\n * ----------------------\r\n * Colour Picker Form Styling\r\n * ----------------------\r\n */ \r\n.colour-fieldset {\r\n    display: grid;\r\n    grid-template-rows: repeat(2, minmax(1fr, 50px));\r\n    grid-template-columns: repeat(3, 1fr);\r\n    gap: 0.6rem;\r\n    width: 100%;\r\n    padding: 0.5rem;\r\n    border: 1px solid var(--colour-picker-border);\r\n    border-radius: 3px;\r\n}\r\n\r\n.colour-field {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 0.2rem;\r\n}\r\n\r\n.colour-radio-btn-label {\r\n    text-align: center;\r\n    color: var(--black);\r\n    width: 100%;\r\n}\r\n\r\n/*\r\n * ------------------------------------------------------------\r\n * Content Body Styling\r\n * ------------------------------------------------------------\r\n */\r\n\r\n.content-body {\r\n    grid-area: 2 / 2 / -2 / -1;\r\n    background-color: rgb(226, 232, 240);\r\n    overflow-y: auto;\r\n}\r\n\r\n/*\r\n * ----------------------\r\n * All Projects Styling\r\n * ----------------------\r\n */\r\n.project-card-grid {\r\n    display: grid;\r\n    grid-auto-rows: 200px;\r\n    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\r\n    gap: 2rem;\r\n    padding: 2rem;\r\n} \r\n\r\n.project-card {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    padding: 1rem 2rem;\r\n    height: 200px;\r\n    width: auto;\r\n    border: 2px solid var(--black);\r\n    border-radius: 10px;\r\n    background-color: var(--white);\r\n    box-shadow: 0 10px 15px var(--light-shadow);\r\n}\r\n\r\n.project-card-details {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n}\r\n\r\n.project-card-description {\r\n    word-wrap: break-word;\r\n}\r\n\r\n/*\r\n * ----------------------\r\n * Today Content Styling\r\n * ----------------------\r\n */\r\n\r\n.section-divider {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-left: -2rem;\r\n} \r\n.section-divider::before {\r\n    flex-grow: 1;\r\n    content: \"\";\r\n    height: 1px;\r\n    margin: 0 1rem 0 2rem;\r\n    background-color: var(--black);\r\n}\r\n.section-divider::after {\r\n    flex-grow: 100;\r\n    content: \"\";\r\n    height: 1px;\r\n    margin: 0 2rem 0 1rem;\r\n    background-color: var(--black);\r\n}\r\n\r\n/*\r\n * ----------------------\r\n * Project Content Styling\r\n * ----------------------\r\n */\r\n.task-list-container,\r\n.steps-list {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-left: 2rem;\r\n}\r\n\r\n.task-list-container {\r\n    gap: 0.2rem;\r\n    margin-top: 10px;\r\n}\r\n\r\n.project-task-item {\r\n    margin-top: 1rem;\r\n}\r\n\r\n.task-list {\r\n    padding: 0 2rem 1rem;\r\n}\r\n\r\n.task-card {\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.project-list-item {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    gap: 1rem;\r\n    padding: 0.8rem 1rem;\r\n    font-size: large;\r\n    border-radius: 10px;\r\n    background-color: white;\r\n    box-shadow: 0 10px 15px var(--light-shadow);\r\n} \r\n\r\n.project-list-item-info {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n}\r\n\r\n.project-list-task-details {\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.step-card {\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.project-list-step-info {\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n/*\r\n * ----------------------\r\n * Priority Icon Styling\r\n * ----------------------\r\n */\r\n .priority-text {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 1.2rem;\r\n    width: 2.5rem;\r\n    font-weight: bold;\r\n    font-size: small;\r\n}\r\n\r\n.priority-high {\r\n    color: var(--priority-high-text);\r\n    background-color: var(--priority-high-background);\r\n}\r\n\r\n.priority-med {\r\n    color: var(--priority-med-text);\r\n    background-color: var(--priority-med-background);\r\n}\r\n\r\n.priority-low {\r\n    color: var(--priority-low-text);\r\n    background-color: var(--priority-low-background);\r\n}\r\n\r\n.priority-none {\r\n    color: var(--priority-none-text);\r\n    background-color: var(--priority-none-background);\r\n}\r\n\r\n.completed {\r\n    background-color: var(--completed-card-background);\r\n    color: var(--completed-card-text);\r\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\":root {\\r\\n    /* Common colours */\\r\\n    --white: #ffffff;\\r\\n    --black: #000000;\\r\\n\\r\\n    /* General page styling */\\r\\n    --sidebar-background: rgba(223, 163, 163, 0.3); /*rgba(255, 198, 112, 0.05)*/\\r\\n    --sidebar-text: rgb(0, 0, 0);\\r\\n    --sidebar-hover-background: rgba(191, 112, 255, 0.15); /*rgba(226, 112, 255, 0.5) rgba(255, 141, 112, 0.15)*/\\r\\n    --project-icon: rgba(177, 96, 231, 0.5);\\r\\n    --colour-picker-border: rgb(118, 118, 118);\\r\\n\\r\\n    /* Button styling */\\r\\n    --action-btn-background: var(--white);\\r\\n    --action-btn-hover-background: rgba(0, 0, 0, 0.1);\\r\\n    --submit-btn-background: rgb(0, 89, 255);\\r\\n\\r\\n    /* Shadows */\\r\\n    --dark-shadow: #00000040;\\r\\n    --light-shadow: #00000025;\\r\\n    --faint-shadow: #00000010;\\r\\n\\r\\n    /* Task priority indicators */\\r\\n    --input-highlight: #006eff;\\r\\n    --priority-high-text: #ae2e24;\\r\\n    --priority-high-background: #ffeceb;\\r\\n    --priority-med-text: #5e4db2;\\r\\n    --priority-med-background: #f3f0ff;\\r\\n    --priority-low-text: #0055cc;\\r\\n    --priority-low-background: #e9f2ff;\\r\\n    --priority-none-text: var(--black);\\r\\n    --priority-none-background: #f0f1f4;\\r\\n\\r\\n    /* Completed status indicators */\\r\\n    --completed-card-text: #6a6a6a;\\r\\n    --completed-card-background: rgb(210, 210, 210);\\r\\n}\\r\\n\\r\\n/*\\r\\n * ------------------------------------------------------------\\r\\n * General Styling\\r\\n * ------------------------------------------------------------\\r\\n */\\r\\n* {\\r\\n    box-sizing: border-box;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\nbody, textarea {\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n}\\r\\n\\r\\nul {\\r\\n    list-style: none;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\ninput[type=\\\"checkbox\\\"],\\r\\ninput[type=\\\"radio\\\"] {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.action-btns {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    gap: 0.2rem;\\r\\n}\\r\\n\\r\\n.action-btn {\\r\\n    cursor: pointer;\\r\\n    padding: 1rem;\\r\\n    border: 2px solid #00000099;\\r\\n    border-radius: 50%;\\r\\n    background-color: #ffffff00;\\r\\n}\\r\\n.action-btn:hover {\\r\\n    background-color: var(--action-btn-hover-background);\\r\\n}\\r\\n\\r\\n.disabled-action-btn {\\r\\n    cursor: default;\\r\\n    background-color: var(--completed-card-background)\\r\\n}\\r\\n.disabled-action-btn:hover {\\r\\n    background-color: var(--completed-card-background);\\r\\n}\\r\\n\\r\\n.icon {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    font-size: x-large;\\r\\n    height: 20px;\\r\\n    width: 20px;\\r\\n}\\r\\n\\r\\n/* Custom checkboxes */\\r\\ninput[type=\\\"checkbox\\\"] {\\r\\n    width: 2em;\\r\\n    height: 2em;\\r\\n    background-color: white;\\r\\n    border-radius: 50%;\\r\\n    vertical-align: middle;\\r\\n    border: 1px solid #ddd;\\r\\n    appearance: none;\\r\\n    -webkit-appearance: none;\\r\\n    outline: none;\\r\\n    cursor: pointer;\\r\\n}\\r\\ninput[type=\\\"checkbox\\\"]:checked {\\r\\n    background-color: var(--sidebar-hover-background);\\r\\n}\\r\\n\\r\\n/*\\r\\n * ------------------------------------------------------------\\r\\n * Page Layout Styling\\r\\n * ------------------------------------------------------------\\r\\n */\\r\\n\\r\\n.content {\\r\\n    box-sizing: content-box;\\r\\n    display: grid;\\r\\n    grid: 1fr 5fr / 1fr 4fr;\\r\\n    width: 100vw;\\r\\n    height: 100vh;\\r\\n}\\r\\n\\r\\n/*\\r\\n * ------------------------------------------------------------\\r\\n * Sidebar Styling\\r\\n * ------------------------------------------------------------\\r\\n */\\r\\n\\r\\n.sidebar {\\r\\n    grid-area: 1 / 1 / -1 / 2;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    gap: 2rem;\\r\\n    padding: 0 1rem;\\r\\n    color: var(--sideabar-text);\\r\\n    background-color: var(--sidebar-background);\\r\\n    z-index: 2;\\r\\n    overflow-y: auto;\\r\\n}\\r\\n\\r\\n.logo {\\r\\n    text-align: center;\\r\\n    padding-top: 1.5rem;\\r\\n}\\r\\n\\r\\n.sidebar-heading {\\r\\n    padding: 0.5rem 0 0.5rem 1.5rem;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.sidebar-menu,\\r\\n.sidebar-projects-menu {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    gap: 0.2rem;\\r\\n    padding-left: 2rem;\\r\\n}\\r\\n\\r\\n.sidebar-item {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    gap: 1rem;\\r\\n    padding: 0.8rem 0 0.8rem 1rem;\\r\\n    font-size: large;\\r\\n    border-radius: 10px;\\r\\n}\\r\\n\\r\\n.sidebar-item:hover {\\r\\n    cursor: pointer;\\r\\n    background-color: var(--sidebar-hover-background);\\r\\n}\\r\\n\\r\\n.project-icon {\\r\\n    color: var(--project-icon);\\r\\n    background-color: var(--project-icon);\\r\\n    border: 2px solid #00000099;\\r\\n    border-radius: 50%;\\r\\n}\\r\\n\\r\\n/*\\r\\n * ------------------------------------------------------------\\r\\n * Header Styling\\r\\n * ------------------------------------------------------------\\r\\n */\\r\\n\\r\\n.header {\\r\\n    grid-area: 1 / 2 / 2 / -1;\\r\\n    background-color: var(--white);\\r\\n    box-shadow: 0 10px 15px var(--light-shadow);\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n/*\\r\\n * ----------------------\\r\\n * All Projects Header Styling\\r\\n * ----------------------\\r\\n */\\r\\n.all-projects-header-container {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: space-between;\\r\\n    padding: 0 3rem;\\r\\n    height: 100%;\\r\\n    border: 2px solid var(--black);\\r\\n    border-top: none;\\r\\n    border-right: none;\\r\\n}\\r\\n\\r\\n.create-project-header-btn {\\r\\n    padding: 2rem;\\r\\n}\\r\\n\\r\\n.create-project-header-btn > img {\\r\\n    height: 40px;\\r\\n    width: 40px;\\r\\n}\\r\\n/*\\r\\n * ----------------------\\r\\n * Project Header Styling\\r\\n * ----------------------\\r\\n */\\r\\n.project-header-container {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: space-between;\\r\\n    padding: 0 3rem;\\r\\n    height: 100%;\\r\\n    border: 2px solid #000000;\\r\\n    border-top: none;\\r\\n    border-right: none;\\r\\n}\\r\\n\\r\\n.project-header-details {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: start;\\r\\n}\\r\\n\\r\\n.project-title-container {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    gap: 1rem;\\r\\n}\\r\\n\\r\\n/*\\r\\n * ------------------------------------------------------------\\r\\n * Form Styling\\r\\n * ------------------------------------------------------------\\r\\n */\\r\\n/*\\r\\n* ----------------------\\r\\n* General Form Styling\\r\\n* ----------------------\\r\\n*/\\r\\n.title-input:focus,\\r\\n.date-input:focus,\\r\\n.desc-input:focus {\\r\\n    outline: none;\\r\\n    border: 2px solid var(--input-highlight);\\r\\n} \\r\\n\\r\\n.modal {\\r\\n    display: none;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    position: fixed;\\r\\n    z-index: 2;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    overflow: auto;\\r\\n    background-color: var(--dark-shadow);\\r\\n}\\r\\n\\r\\n.form-container {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    width: 400px;\\r\\n    height: auto;\\r\\n    border: 2px solid black;\\r\\n    border-radius: 10px;\\r\\n    background-color: var(--white);\\r\\n    box-shadow: 0 10px 15px var(--light-shadow);\\r\\n} \\r\\n\\r\\n.create-edit-form,\\r\\n.delete-form,\\r\\n.colour-form {\\r\\n    flex: 1;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    gap: 1rem;\\r\\n    padding: 1rem 0;\\r\\n}\\r\\n\\r\\n.field-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    gap: 0.2rem;\\r\\n    width: 80%;\\r\\n}\\r\\n\\r\\n/*\\r\\n * ----------------------\\r\\n * Form Button Styling\\r\\n * ----------------------\\r\\n */ \\r\\n\\r\\n.form-btn-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    gap: 1rem;\\r\\n}\\r\\n\\r\\n.submit-btn {\\r\\n    width: 80%;\\r\\n    color: var(--white);\\r\\n    background-color: var(--submit-btn-background);\\r\\n}\\r\\n\\r\\n.cancel-btn {\\r\\n    color: var(--submit-btn-background);\\r\\n    background-color: var(--white);\\r\\n}\\r\\n\\r\\n.form-btn {\\r\\n    padding: 0.5rem 1rem;\\r\\n    border: 2px solid var(--submit-btn-background);\\r\\n}\\r\\n\\r\\n/*\\r\\n * ----------------------\\r\\n * Creation Form Styling\\r\\n * ----------------------\\r\\n */ \\r\\n.form-label {\\r\\n    color: rebeccapurple;\\r\\n}\\r\\n\\r\\n.title-input,\\r\\n.date-input {\\r\\n    height: 30px;\\r\\n}\\r\\n\\r\\n.desc-input {\\r\\n    resize: none;\\r\\n    height: 50px;\\r\\n    padding: 0.4rem 0;\\r\\n}\\r\\n\\r\\n.priority-field {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    gap: 0.3rem;\\r\\n    padding: 0.5rem;\\r\\n}\\r\\n \\r\\n/*\\r\\n * ----------------------\\r\\n * Colour Picker Form Styling\\r\\n * ----------------------\\r\\n */ \\r\\n.colour-fieldset {\\r\\n    display: grid;\\r\\n    grid-template-rows: repeat(2, minmax(1fr, 50px));\\r\\n    grid-template-columns: repeat(3, 1fr);\\r\\n    gap: 0.6rem;\\r\\n    width: 100%;\\r\\n    padding: 0.5rem;\\r\\n    border: 1px solid var(--colour-picker-border);\\r\\n    border-radius: 3px;\\r\\n}\\r\\n\\r\\n.colour-field {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    gap: 0.2rem;\\r\\n}\\r\\n\\r\\n.colour-radio-btn-label {\\r\\n    text-align: center;\\r\\n    color: var(--black);\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n/*\\r\\n * ------------------------------------------------------------\\r\\n * Content Body Styling\\r\\n * ------------------------------------------------------------\\r\\n */\\r\\n\\r\\n.content-body {\\r\\n    grid-area: 2 / 2 / -2 / -1;\\r\\n    background-color: rgb(226, 232, 240);\\r\\n    overflow-y: auto;\\r\\n}\\r\\n\\r\\n/*\\r\\n * ----------------------\\r\\n * All Projects Styling\\r\\n * ----------------------\\r\\n */\\r\\n.project-card-grid {\\r\\n    display: grid;\\r\\n    grid-auto-rows: 200px;\\r\\n    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\\r\\n    gap: 2rem;\\r\\n    padding: 2rem;\\r\\n} \\r\\n\\r\\n.project-card {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: space-between;\\r\\n    padding: 1rem 2rem;\\r\\n    height: 200px;\\r\\n    width: auto;\\r\\n    border: 2px solid var(--black);\\r\\n    border-radius: 10px;\\r\\n    background-color: var(--white);\\r\\n    box-shadow: 0 10px 15px var(--light-shadow);\\r\\n}\\r\\n\\r\\n.project-card-details {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    gap: 1rem;\\r\\n}\\r\\n\\r\\n.project-card-description {\\r\\n    word-wrap: break-word;\\r\\n}\\r\\n\\r\\n/*\\r\\n * ----------------------\\r\\n * Today Content Styling\\r\\n * ----------------------\\r\\n */\\r\\n\\r\\n.section-divider {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    margin-left: -2rem;\\r\\n} \\r\\n.section-divider::before {\\r\\n    flex-grow: 1;\\r\\n    content: \\\"\\\";\\r\\n    height: 1px;\\r\\n    margin: 0 1rem 0 2rem;\\r\\n    background-color: var(--black);\\r\\n}\\r\\n.section-divider::after {\\r\\n    flex-grow: 100;\\r\\n    content: \\\"\\\";\\r\\n    height: 1px;\\r\\n    margin: 0 2rem 0 1rem;\\r\\n    background-color: var(--black);\\r\\n}\\r\\n\\r\\n/*\\r\\n * ----------------------\\r\\n * Project Content Styling\\r\\n * ----------------------\\r\\n */\\r\\n.task-list-container,\\r\\n.steps-list {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    padding-left: 2rem;\\r\\n}\\r\\n\\r\\n.task-list-container {\\r\\n    gap: 0.2rem;\\r\\n    margin-top: 10px;\\r\\n}\\r\\n\\r\\n.project-task-item {\\r\\n    margin-top: 1rem;\\r\\n}\\r\\n\\r\\n.task-list {\\r\\n    padding: 0 2rem 1rem;\\r\\n}\\r\\n\\r\\n.task-card {\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.project-list-item {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: space-between;\\r\\n    gap: 1rem;\\r\\n    padding: 0.8rem 1rem;\\r\\n    font-size: large;\\r\\n    border-radius: 10px;\\r\\n    background-color: white;\\r\\n    box-shadow: 0 10px 15px var(--light-shadow);\\r\\n} \\r\\n\\r\\n.project-list-item-info {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    gap: 1rem;\\r\\n}\\r\\n\\r\\n.project-list-task-details {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.step-card {\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.project-list-step-info {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n/*\\r\\n * ----------------------\\r\\n * Priority Icon Styling\\r\\n * ----------------------\\r\\n */\\r\\n .priority-text {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    height: 1.2rem;\\r\\n    width: 2.5rem;\\r\\n    font-weight: bold;\\r\\n    font-size: small;\\r\\n}\\r\\n\\r\\n.priority-high {\\r\\n    color: var(--priority-high-text);\\r\\n    background-color: var(--priority-high-background);\\r\\n}\\r\\n\\r\\n.priority-med {\\r\\n    color: var(--priority-med-text);\\r\\n    background-color: var(--priority-med-background);\\r\\n}\\r\\n\\r\\n.priority-low {\\r\\n    color: var(--priority-low-text);\\r\\n    background-color: var(--priority-low-background);\\r\\n}\\r\\n\\r\\n.priority-none {\\r\\n    color: var(--priority-none-text);\\r\\n    background-color: var(--priority-none-background);\\r\\n}\\r\\n\\r\\n.completed {\\r\\n    background-color: var(--completed-card-background);\\r\\n    color: var(--completed-card-text);\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nc = undefined;","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","// Updates the data stored in the local environment\r\nfunction saveProjectsToLocalStorage(newProjects) {\r\n    localStorage.setItem(\"projects\", JSON.stringify(newProjects));\r\n}\r\n\r\n// Fetches the data stored in the local environemnt and converts ut back to useable format\r\nfunction loadProjectsFromLocalStorage() {\r\n    return JSON.parse(localStorage.getItem(\"projects\"));\r\n}\r\n\r\nexport { saveProjectsToLocalStorage, loadProjectsFromLocalStorage }","/* Colour ENUM */\r\nconst Colours = {\r\n    NONE: \"#ffffff\",\r\n    PINK: \"hsl(320, 60%, 85%)\",\r\n    PURPLE: \"hsl(270, 60%, 75%)\",\r\n    BLUE: \"hsl(210, 60%, 75%)\",\r\n    TEAL: \"hsl(190, 60%, 75%)\",\r\n    GREEN: \"hsl(120, 60%, 85%)\",\r\n    YELLOW: \"hsl(50, 60%, 85%)\",\r\n    ORANGE: \"hsl(30, 60%, 85%)\",\r\n    RED: \"hsl(0, 60%, 85%)\",\r\n}\r\n\r\n/* Default option */\r\nconst DefaultColour = Colours.NONE;\r\n\r\n/* Checks whether the colour value is valid */\r\nfunction isValidColour(colour) {\r\n    return Object.values(Colours).includes(colour);\r\n}\r\n\r\nexport { Colours, DefaultColour, isValidColour }","/* Priority ENUM */\r\nconst Priority = {\r\n    NONE: \"None\",\r\n    LOW: \"Low\",\r\n    MED: \"Med\",\r\n    HIGH: \"High\",\r\n}\r\n\r\n/* Default option */\r\nconst DefaultPriority = Priority.NONE;\r\n\r\n/* Checks whether the priority value is valid */\r\nfunction isValidPriority(priority) {\r\n    return Object.values(Priority).includes(priority);\r\n}\r\n\r\n/* Converts a priority value to a numerical value */\r\nfunction convertPriorityToValue(priority) {\r\n    if (priority === Priority.HIGH) {\r\n        return 0;\r\n    }\r\n    else if (priority === Priority.MED) {\r\n        return 1;\r\n    }\r\n    else if (priority === Priority.LOW) {\r\n        return 2;\r\n    }\r\n    else {\r\n        return 3;\r\n    }\r\n}\r\n\r\n/* Sorts two elements based on their priority values */\r\nfunction prioritySort(x, y) {\r\n    const xPriorityValue = convertPriorityToValue(x.getPriority());\r\n    const yPriorityValue = convertPriorityToValue(y.getPriority());\r\n    if ( xPriorityValue > yPriorityValue) {\r\n        return 1;\r\n    }\r\n    else if (xPriorityValue < yPriorityValue) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n\r\nexport { Priority, DefaultPriority, isValidPriority, prioritySort }","/* Status ENUM */\r\nconst Status = {\r\n    COMPLETED: \"Completed\",\r\n    INCOMPLETE: \"Incomplete\",\r\n}\r\n\r\n/* Checks whether the status property is valid */\r\nfunction isValidStatus(status) {\r\n    return Object.values(Status).includes(status);\r\n}\r\n\r\nexport { Status, isValidStatus }","import { renderProjectPage, clearPage } from \"../../display/display.js\";\r\nimport { setCurrentProject } from \"../../models/organizers/project.js\";\r\n\r\n/* Make a group of project navigation DOM elements link to their project page */\r\nfunction createProjectPageNavigationListeners(projects, className) {\r\n    const projectNavElements = document.querySelectorAll(className);\r\n\r\n    // Link each project navigation element to a project page\r\n    projectNavElements.forEach(element => {\r\n        projects.forEach(project => {\r\n            if (String(project.getProjectID()) === element.getAttribute(\"data-project-id\")) {\r\n                element.addEventListener(\"click\", () => {\r\n                    clearPage();\r\n                    setCurrentProject(project);\r\n                    renderProjectPage(project);\r\n                })\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\n/* Make a single project navigation DOM element like to a project page */\r\nfunction addProjectNavigationListener(projects, item) {\r\n    projects.forEach(project => {\r\n        if (String(project.getProjectID()) === item.getAttribute(\"data-project-id\")) {\r\n            item.addEventListener(\"click\", () => {\r\n                clearPage();\r\n                setCurrentProject(project);\r\n                renderProjectPage(project);\r\n                return;\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nexport { createProjectPageNavigationListeners, addProjectNavigationListener }","import { getProjects } from \"../../models/organizers/project.js\";\r\nimport { addProjectNavigationListener } from \"../../common/eventListeners/projectNavigationListeners.js\";\r\n\r\n/* Create a sidebar menu item */\r\nfunction generateSidebarItem(title, iconFunction) {\r\n    const sidebarItem = document.createElement(\"li\");\r\n    sidebarItem.classList.add(\"sidebar-item\");\r\n\r\n    // Title\r\n    const itemTitle = document.createElement(\"p\");\r\n    itemTitle.textContent = title;\r\n\r\n    sidebarItem.appendChild(iconFunction());\r\n    sidebarItem.appendChild(itemTitle);\r\n\r\n    return sidebarItem;\r\n}\r\n\r\n/* Create the icon for a project */\r\nfunction generateProjectIcon(iconColour) {\r\n    const projectIcon = document.createElement(\"span\");\r\n    projectIcon.classList.add(\"icon\", \"project-icon\");\r\n    projectIcon.style.backgroundColor = iconColour;\r\n\r\n    return projectIcon;\r\n}\r\n\r\n/* Create the icon for the all projects icon */\r\nfunction generateAllProjectIcon() {\r\n    const projectIcon = document.createElement(\"span\");\r\n    projectIcon.classList.add(\"icon\");\r\n\r\n    // Icon image\r\n    const iconImage = document.createElement(\"img\");\r\n    iconImage.src = \"../src/assets/icons/projects.svg\";\r\n\r\n    // Appening elements\r\n    projectIcon.appendChild(iconImage);\r\n\r\n    return projectIcon;\r\n}\r\n\r\n/* Create a project button on the sidebar */\r\nfunction generateProjectButton(project) {\r\n    const projectItem = generateSidebarItem(project.getTitle(), () => generateProjectIcon(project.getColour()));\r\n    projectItem.classList.add(\"sidebar-project-button\");\r\n    // Link to project\r\n    projectItem.setAttribute(\"data-project-id\", project.getProjectID());\r\n\r\n    return projectItem;\r\n}\r\n\r\n/* Create an all projects button on the sidebar */\r\nfunction generateAllProjectsButton() {\r\n    const allProjectsButton = generateSidebarItem(\"All Projects\", generateAllProjectIcon);\r\n    allProjectsButton.classList.add(\"all-projects-button\");\r\n    return allProjectsButton;\r\n}\r\n\r\n/* Display all projects on the sidebar */\r\nfunction renderSidebarProjects(projects, parent) {\r\n    parent.appendChild(generateAllProjectsButton());\r\n    for (let project of projects) {\r\n        parent.appendChild(generateProjectButton(project));\r\n    }\r\n}\r\n\r\n/* Add a project to the sidebar display */\r\nfunction addToSidebarProjects(project) {\r\n    const newProjectBtn = generateProjectButton(project);\r\n\r\n    document.querySelector(\".sidebar-projects-menu\").appendChild(newProjectBtn);\r\n    addProjectNavigationListener(getProjects(), newProjectBtn);\r\n}\r\n\r\n/* Edit the title of a sidebar project button */\r\nfunction editSidebarProjectTitle(project) {\r\n    const sidebarItem = document.querySelector(`.sidebar-project-button[data-project-id=\"${project.getProjectID()}\"]`);\r\n    \r\n    sidebarItem.lastChild.textContent = project.getTitle();\r\n}\r\n\r\n/* Edit the colour of a sidebar project button */\r\nfunction editSidebarProjectColour(project) {\r\n    const sidebarItem = document.querySelector(`.sidebar-project-button[data-project-id=\"${project.getProjectID()}\"]`);\r\n    const sidebarItemIcon = sidebarItem.firstChild;\r\n    sidebarItemIcon.style.backgroundColor = project.getColour();\r\n}\r\n\r\n/* Remove a sidebar project button */\r\nfunction removeFromSidebarProjects(project) {\r\n    const sidebarItem = document.querySelector(`.sidebar-project-button[data-project-id=\"${project.getProjectID()}\"]`);\r\n\r\n    sidebarItem.remove();\r\n}\r\n\r\nexport { renderSidebarProjects, addToSidebarProjects, editSidebarProjectTitle, editSidebarProjectColour, removeFromSidebarProjects }","import { createActionButtonListener } from \"../../common/eventListeners/actionButtonListeners/index.js\";\r\n\r\n/* Creates the action buttons for a organizer */\r\nfunction generateActionButtons(buttons) {\r\n    const actionBtns = document.createElement(\"span\");\r\n    actionBtns.classList.add(\"action-btns\");\r\n\r\n    // Project buttons\r\n    buttons.forEach(btn => {\r\n        // Button container\r\n        const actionButtonContainer = document.createElement(\"button\");\r\n        actionButtonContainer.classList.add(\"icon\", \"action-btn\");\r\n        btn.classNames.forEach(className => {\r\n            actionButtonContainer.classList.add(className);\r\n        })\r\n\r\n        // Button\r\n        const actionBtn = document.createElement(\"img\");\r\n        actionBtn.src = btn.src;\r\n        actionBtn.alt = btn.alt;\r\n        actionBtn.title = btn.title;\r\n\r\n        // Button action\r\n        createActionButtonListener(actionButtonContainer, btn.event)\r\n\r\n        // Append elements\r\n        actionButtonContainer.appendChild(actionBtn);\r\n\r\n        actionBtns.appendChild(actionButtonContainer);\r\n    })\r\n\r\n    return actionBtns;\r\n}\r\n\r\n/* Disable an action button */\r\nfunction disableActionButtons(buttons) {\r\n    buttons.forEach(button => {\r\n        button.disabled = true;\r\n        // Visually show disabled\r\n        button.classList.add(\"disabled-action-btn\");\r\n    })\r\n}\r\n\r\n/* Enable an action button */\r\nfunction enableActionButtons(buttons) {\r\n    buttons.forEach(button => {\r\n        button.disabled = false;\r\n        // Visually show enabled\r\n        button.classList.remove(\"disabled-action-btn\");\r\n    })\r\n}\r\n\r\nexport { generateActionButtons, disableActionButtons, enableActionButtons }","/* Attach an event listener to an action button */\r\nfunction createActionButtonListener(btn, eventFunction) {\r\n    btn.addEventListener(\"click\", (e) => {\r\n        eventFunction();        \r\n        e.stopPropagation();\r\n    });\r\n}\r\n\r\nexport { createActionButtonListener }","/* Action button classname ENUM */\r\nconst Actions = {\r\n    CREATE: \"add-button\",\r\n    COLOUR: \"colour-button\",\r\n    EDIT: \"edit-button\",\r\n    DELETE: \"delete-button\",\r\n}\r\n\r\nexport { Actions }","import { getCurrentProject } from \"../../../models/organizers/project.js\";\r\n\r\n/* Sets current task from a given taskID value */\r\nfunction setCurrentTaskFromID(tasks, taskID) {\r\n    tasks.forEach(task => {\r\n        if (String(task.getTaskID()) === taskID) {\r\n            getCurrentProject().setCurrentTask(task);\r\n            return;\r\n        }\r\n    });\r\n}\r\n\r\n/* Sets current step from a given stepID value */\r\nfunction setCurrentStepFromID(steps, stepID) {\r\n    steps.forEach(step => {\r\n        if (String(step.getStepID()) === stepID) {\r\n            getCurrentProject().getCurrentTask().setCurrentStep(step);\r\n            return;\r\n        }\r\n    });\r\n}\r\n\r\nexport { setCurrentTaskFromID, setCurrentStepFromID }","import { Priority } from \"../../models/enums/priority.js\";\r\nimport { Colours } from \"../../models/enums/colours.js\";\r\n\r\n/* Add the designated legend and fieldset to a container */\r\nfunction generateRadioButtons(legend, fieldset) {\r\n    const fieldContainer = document.createElement(\"div\");\r\n    fieldContainer.classList.add(\"field-container\");\r\n\r\n    fieldContainer.appendChild(legend);\r\n    fieldContainer.appendChild(fieldset);\r\n\r\n    return fieldContainer;\r\n}\r\n\r\n/* Create a set of radio buttons for the priority options */\r\nfunction generatePriorityRadioButtons(organizerType) {\r\n    /* Add the radio button options */\r\n    function generatePriorityOptions(organizerType) {\r\n        Object.values(Priority).forEach(priorityValue => {\r\n            const radioContainer = document.createElement(\"div\");\r\n    \r\n            // ID\r\n            const optionID = organizerType.toLowerCase() + \"-\" + priorityValue.toLowerCase();\r\n    \r\n            // Input\r\n            const radioInput = document.createElement(\"input\");\r\n            radioInput.type = \"radio\";\r\n            radioInput.id = optionID;\r\n            radioInput.name = \"priority\";\r\n            radioInput.value = priorityValue;\r\n    \r\n            // Label\r\n            const radioLabel = document.createElement(\"label\");\r\n            radioLabel.textContent = priorityValue;\r\n            radioLabel.for = optionID;\r\n    \r\n            // Append elements\r\n            radioContainer.appendChild(radioInput);\r\n            radioContainer.appendChild(radioLabel);\r\n            fieldset.appendChild(radioContainer);\r\n        })\r\n    }\r\n\r\n    // Fieldcontainer\r\n    const fieldset = document.createElement(\"fieldset\");\r\n    fieldset.classList.add(\"priority-field\");\r\n\r\n    // Legend\r\n    const legend = document.createElement(\"legend\");\r\n    legend.textContent = \"Priority:\";\r\n    legend.classList.add(\"form-label\");\r\n\r\n    // Appending elements\r\n    generatePriorityOptions(organizerType);\r\n    const field = generateRadioButtons(legend, fieldset);\r\n\r\n    return field;\r\n}\r\n\r\n/* Create a set of radio buttons for the project colour options */\r\nfunction generateColourRadioButtons() {\r\n    /* Add the radio button options */\r\n    function generateColourOptions() {\r\n        Object.values(Colours).forEach(colourValue => {\r\n            // Colour key\r\n            const colourKey = Object.keys(Colours).find(key => Colours[key] === colourValue);\r\n\r\n            const radioContainer = document.createElement(\"div\");\r\n            radioContainer.style.color = colourValue;\r\n            radioContainer.classList.add(\"colour-field\");\r\n    \r\n            // ID\r\n            const optionID = \"colour-\" + colourValue.toLowerCase();\r\n    \r\n            // Input\r\n            const radioInput = document.createElement(\"input\");\r\n            radioInput.type = \"radio\";\r\n            radioInput.id = optionID;\r\n            radioInput.classList.add(\"colour-radio-btn\");\r\n            radioInput.name = \"colour\";\r\n            radioInput.value = colourValue;\r\n            radioInput.style.color = colourValue;\r\n    \r\n            // Label\r\n            const radioLabel = document.createElement(\"label\");\r\n            radioLabel.classList.add(\"colour-radio-btn-label\");\r\n            radioLabel.textContent = colourKey;\r\n            radioLabel.for = optionID;\r\n            radioLabel.style.backgroundColor = colourValue;\r\n    \r\n            // Append elements\r\n            radioContainer.appendChild(radioInput);\r\n            radioContainer.appendChild(radioLabel);\r\n            fieldset.appendChild(radioContainer);\r\n        })\r\n    }\r\n\r\n    // Fieldset\r\n    const fieldset = document.createElement(\"div\");\r\n    fieldset.classList.add(\"colour-fieldset\");\r\n\r\n    // Legend\r\n    const legend = document.createElement(\"legend\");\r\n    legend.textContent = \"Colour:\";\r\n    legend.classList.add(\"form-label\");\r\n\r\n    // Appending elements\r\n    generateColourOptions();\r\n    const field = generateRadioButtons(legend, fieldset);\r\n\r\n    return field;\r\n}\r\n\r\nexport { generatePriorityRadioButtons, generateColourRadioButtons }","/* Organizer ENUM */\r\nconst Organizers = {\r\n    PROJECT: \"Project\",\r\n    TASK: \"Task\",\r\n    STEP: \"Step\",\r\n}\r\n\r\n/* Checks whether the colour value is valid */\r\nfunction isValidOrganizer(organizer) {\r\n    return Object.values(Organizers).includes(organizer);\r\n}\r\n\r\nexport { Organizers, isValidOrganizer }","import { generateActionButtons } from \"../utility/actionButtons.js\";\r\nimport { Actions } from \"../../models/enums/actionButtons.js\";\r\nimport { createProjectButtonListener } from \"../../common/eventListeners/actionButtonListeners/allProjectsActionButtonListeners.js\";\r\nimport { createProjectPageNavigationListeners } from \"../../common/eventListeners/projectNavigationListeners.js\";\r\nimport { setCurrentProject } from \"../../models/organizers/project.js\";\r\nimport { forms } from \"../display.js\";\r\n\r\n/* Create the page showing all of the current projects */\r\nfunction renderAllProjectsPage(projects) {\r\n    /* Create the content for the header section */\r\n    function generateHeader() {\r\n        // All projects buttons to be created\r\n        const createProjectButton = [\r\n            {classNames: [Actions.CREATE, \"create-project-header-btn\"], src: \"../src/assets/icons/add.svg\", alt: \"\", title: \"Add New Project\",\r\n            event: () => {\r\n                createProjectButtonListener();\r\n            }},\r\n        ]\r\n\r\n        const headerContainer = document.createElement(\"div\");\r\n        headerContainer.classList.add(\"all-projects-header-container\");\r\n\r\n        // Title\r\n        const heading = document.createElement(\"h1\");\r\n        heading.textContent = \"All Projects\";\r\n\r\n        // Appending elements\r\n        headerContainer.appendChild(heading);\r\n        headerContainer.appendChild(generateActionButtons(createProjectButton));\r\n\r\n        return headerContainer;\r\n    }\r\n\r\n    /* Create the content for the body section */\r\n    function generateContent(projects) {\r\n        /* Create the details section of the card */\r\n        function generateCardDetails(project) {\r\n            // Create project card details\r\n            const projectCardDetails = document.createElement(\"div\");\r\n            projectCardDetails.classList.add(\"project-card-details\");\r\n\r\n            // Project name\r\n            const projectName = document.createElement(\"h2\");\r\n            projectName.textContent = project.getTitle();\r\n\r\n            // Project description\r\n            const projectDescription = document.createElement(\"p\");\r\n            projectDescription.textContent = project.getDescription();\r\n            projectDescription.classList.add(\"project-card-description\");\r\n\r\n            // Appending elements\r\n            projectCardDetails.appendChild(projectName);\r\n            projectCardDetails.appendChild(projectDescription);\r\n\r\n            return projectCardDetails;\r\n        }\r\n\r\n        /* Creates the logic for the project card action buttons */\r\n        function generateProjectCardButtons(project) {\r\n            // Project Buttons to be created\r\n            const projectCardButtons = [\r\n                {classNames: [Actions.COLOUR], src: \"../src/assets/icons/paint.svg\", alt: \"\", title: \"Colour Project\",\r\n                event: () => {\r\n                    setCurrentProject(project);\r\n                    forms.renderColourPickerForm(); \r\n                }},\r\n                {classNames: [Actions.EDIT, \"edit-project\"], src: \"../src/assets/icons/edit.svg\", alt: \"\", title: \"Edit Project\",\r\n                event: () => {\r\n                    setCurrentProject(project);\r\n                    forms.renderEditProjectForm();\r\n                }},\r\n                {classNames: [Actions.DELETE], src: \"../src/assets/icons/delete.svg\", alt: \"\", title: \"Delete Project\",\r\n                event: () => {\r\n                    setCurrentProject(project);\r\n                    forms.renderDeleteProjectForm();\r\n                }},\r\n            ]\r\n\r\n            return projectCardButtons;\r\n        }\r\n\r\n\r\n        const projectCardGrid = document.createElement(\"div\");\r\n        projectCardGrid.classList.add(\"project-card-grid\");\r\n\r\n        // Adding each of the projects to a card\r\n        projects.forEach(project => {\r\n            const projectCard = document.createElement(\"span\");\r\n            projectCard.classList.add(\"project-card\");\r\n\r\n            // Link to project\r\n            projectCard.setAttribute(\"data-project-id\", project.getProjectID());\r\n            projectCard.style.backgroundColor = project.getColour();\r\n            projectCard.style.borderColor = \"#000000\";\r\n\r\n            // Appending elements\r\n            projectCard.appendChild(generateCardDetails(project));\r\n            projectCard.appendChild(generateActionButtons(generateProjectCardButtons(project)));\r\n            projectCardGrid.appendChild(projectCard);\r\n        });\r\n\r\n        return projectCardGrid;\r\n    }\r\n\r\n    // Appending Header\r\n    const header = document.querySelector(\".header\");\r\n    header.appendChild(generateHeader());\r\n\r\n    // Appending Body\r\n    const body = document.querySelector(\".content-body\");\r\n    body.appendChild(generateContent(projects));\r\n\r\n    // Add event listeners\r\n    createProjectPageNavigationListeners(projects, \".project-card\");\r\n}\r\n\r\n/* Updates the project card if project information is edited */\r\nfunction editProjectCardInformation(project) {\r\n    const projectCard = document.querySelector(`.project-card[data-project-id=\"${project.getProjectID()}\"]`);\r\n    const cardDetails = projectCard.firstChild;\r\n    const cardTitle = cardDetails.firstChild;\r\n    const cardDescription = cardDetails.lastChild;\r\n\r\n    cardTitle.textContent = project.getTitle();\r\n    cardDescription.textContent = project.getDescription();\r\n}\r\n\r\n/* Updates the project card if project colour is edited */\r\nfunction editProjectCardColour(project) {\r\n    const projectCard = document.querySelector(`.project-card[data-project-id=\"${project.getProjectID()}\"]`);\r\n    projectCard.style.backgroundColor = project.getColour();\r\n}\r\n\r\n/* Removes a deleted projects card */\r\nfunction deleteProjectCard(project) {\r\n    const projectCard = document.querySelector(`.project-card[data-project-id=\"${project.getProjectID()}\"]`);\r\n\r\n    projectCard.remove();\r\n}\r\n\r\nexport { renderAllProjectsPage, editProjectCardInformation, editProjectCardColour, deleteProjectCard }","import generateTextFields from \"./textFieldGenerator.js\";\r\nimport * as radioFieldGenerator from \"./radioFieldGenerator.js\";\r\nimport { Organizers } from \"../../models/enums/organizer.js\";\r\nimport { createProjectFromForm, deleteProject, editProjectColourFromForm, editProjectFromForm, getCurrentProject, getProjects, setCurrentProject } from \"../../models/organizers/project.js\";\r\nimport { createTaskFromForm, editTaskFromForm } from \"../../models/organizers/task.js\";\r\nimport { createStepFromForm, editStepFromForm } from \"../../models/organizers/step.js\";\r\nimport { editSidebarProjectColour, editSidebarProjectTitle, editProjectPageColour, editProjectCardColour, clearPage } from \"../display.js\";\r\nimport { editProjectPageInformation, editStepCardInformation, editTaskCardInformation, renderProjectPage } from \"../projectPage/index.js\";\r\nimport { deleteProjectCard, editProjectCardInformation, renderAllProjectsPage } from \"../allProjectsPage/index.js\";\r\nimport { removeFromSidebarProjects } from \"../sidebar/sidebarProjectsGenerator.js\";\r\nimport { deleteTaskCard } from \"../projectPage/tasksCardHandler.js\";\r\nimport { deleteStepCard } from \"../projectPage/stepsCardHandler.js\";\r\nimport { DefaultPriority } from \"../../models/enums/priority.js\";\r\nimport { createFormCancelButtonListener, createFormSubmitButtonListener } from \"../../common/eventListeners/formButtonListeners.js\";\r\n\r\n/* Create the modal which will store all forms */\r\nfunction generateFormModal(parent) {\r\n    const formModal = document.createElement(\"div\");\r\n    formModal.classList.add(\"modal\");\r\n    parent.appendChild(formModal);\r\n}\r\n\r\n/* Handles form creation and display */\r\nfunction renderForm(form) {\r\n    const modal = document.querySelector(\".modal\");\r\n    modal.style.display = \"flex\";\r\n    formContainer.replaceChildren(form);\r\n    modal.replaceChildren(formContainer);\r\n}\r\n\r\n/* Create the form container and title */\r\nfunction generateFormBase(id, title, formClass) {\r\n    const form = document.createElement(\"form\");\r\n    form.id = id;\r\n    form.classList.add(formClass);\r\n\r\n    // Title\r\n    const formTitle = document.createElement(\"h2\");\r\n    formTitle.textContent = title;\r\n\r\n    form.appendChild(formTitle);\r\n\r\n    return form;\r\n}\r\n\r\n/* Create the basic create/edit form layout */\r\nfunction generateCreateEditFormBase(formFields, formID, formTitle, formType, formClass, organizerType, submitFunction, radioButtons = null) {\r\n    const form = generateFormBase(formID, formTitle, formClass);\r\n\r\n    // Appending elements\r\n    generateTextFields(formFields, form);\r\n    if (radioButtons !== null) {\r\n        form.appendChild(radioButtons);\r\n    }\r\n    addFormButtons(organizerType, formType, form, submitFunction);\r\n\r\n    renderForm(form);\r\n}\r\n\r\n/* Create the submit and cancel form buttons */\r\nfunction addFormButtons(organizerType, actionType, parent, submitFunction) {\r\n    const modal = document.querySelector(\".modal\");\r\n    const btnIDPrefix = actionType.toLowerCase() + \"-\" + organizerType.toLowerCase();\r\n\r\n    // Submit button\r\n    const submitBtn = document.createElement(\"button\");\r\n    submitBtn.textContent = \"Confirm\";\r\n    submitBtn.id =  btnIDPrefix + \"-submit-btn\";\r\n    submitBtn.classList.add(\"form-btn\", \"submit-btn\");\r\n\r\n    // Submit event\r\n    createFormSubmitButtonListener(submitBtn, submitFunction, modal);\r\n\r\n    // Cancel button\r\n    const cancelBtn = document.createElement(\"button\");\r\n    cancelBtn.textContent = \"Cancel\";\r\n    cancelBtn.id =  btnIDPrefix + \"-cancel-btn\";\r\n    cancelBtn.classList.add(\"form-btn\", \"cancel-btn\");\r\n\r\n    // Cancel event\r\n    createFormCancelButtonListener(cancelBtn, modal)\r\n\r\n    // Append elements\r\n    parent.appendChild(submitBtn);\r\n    parent.appendChild(cancelBtn);\r\n}\r\n\r\n/* Create the form base for edit and create step forms */\r\nfunction generateBaseProjectForm(formID, formTitle, formType, submitFunction) {\r\n    // All form fields for projects\r\n    const projectTextFormFields = [\r\n        {labelText: \"Title:\", inputName: \"title\", inputType: \"text\", id: \"project-title\", classes: [\"title-input\"], minlength: 1, maxLength: 20},\r\n        {labelText: \"Description:\", inputName: \"desc\", inputType: \"textarea\", id: \"project-desc\", classes: [\"desc-input\"] , minlength: 1, maxLength: 80, rows: 40},\r\n    ]\r\n    const formClass = \"create-edit-form\";\r\n    const organizerType = Organizers.PROJECT;\r\n\r\n    generateCreateEditFormBase(projectTextFormFields, formID, formTitle, formType, formClass, organizerType, submitFunction);\r\n}\r\n\r\n/* Create the form for creating a new project */\r\nfunction renderCreateProjectForm() {\r\n    generateBaseProjectForm(\"project-creation-form\", \"New Project\", \"Create\", createProjectFromForm);\r\n}\r\n\r\n/* Create the form for editing a project */\r\nfunction renderEditProjectForm() {\r\n    const currentProject = getCurrentProject();\r\n\r\n    // Submit function for editing a project\r\n    const editProjectFunction = () => {\r\n        editProjectFromForm(currentProject);\r\n        editSidebarProjectTitle(currentProject);\r\n        // Checking which page is currently displayed\r\n        if (document.querySelector(\".project-header-container\") !== null) {\r\n            editProjectPageInformation(currentProject);\r\n        }\r\n        else {\r\n            editProjectCardInformation(currentProject);\r\n        }\r\n    }\r\n\r\n    generateBaseProjectForm(\"project-edit-form\", \"Edit Project\", \"Edit\", editProjectFunction);\r\n\r\n    // Fill the form fields with current information\r\n    document.querySelector(\"#project-title\").placeholder = document.querySelector(\"#project-title\").value = currentProject.getTitle();\r\n    document.querySelector(\"#project-desc\").placeholder = document.querySelector(\"#project-desc\").value = currentProject.getDescription();\r\n}\r\n\r\n/* Create the form base for edit and create step forms */\r\nfunction generateBaseTaskForm(formID, formTitle, formType, submitFunction) {\r\n    // All form fields for tasks\r\n    const taskTextFormFields = [\r\n        {labelText: \"Title:\", inputName: \"title\", inputType: \"text\", id: \"task-title\", classes: [\"title-input\"], minlength: 1, maxLength: 40},\r\n        {labelText: \"Description:\", inputName: \"desc\", inputType: \"textarea\", id: \"task-desc\", classes: [\"desc-input\"], minlength: 1, maxLength: 80},\r\n        {labelText: \"Due Date:\", inputName: \"date\", inputType: \"date\", id: \"task-date\", classes: [\"date-input\"]},\r\n    ]\r\n    const formClass = \"create-edit-form\";\r\n    const organizerType = Organizers.TASK;\r\n    const radioButtons = radioFieldGenerator.generatePriorityRadioButtons(Organizers.TASK);\r\n\r\n    generateCreateEditFormBase(taskTextFormFields, formID, formTitle, formType, formClass, organizerType, submitFunction, radioButtons);\r\n}\r\n\r\n/* Create the form for creating a new task */\r\nfunction renderCreateTaskForm() {\r\n    // Submit function for creating a task\r\n    const createTaskFunction = () => {\r\n        createTaskFromForm();\r\n        clearPage();\r\n        renderProjectPage(getCurrentProject());\r\n    }\r\n\r\n    generateBaseTaskForm(\"task-creation-form\", \"New Task\", \"Create\", createTaskFunction);\r\n\r\n    // Highlight the default priority\r\n    const priorityBtn = document.querySelector(`input[name='priority'][value='${DefaultPriority}']`);\r\n    priorityBtn.checked = true;\r\n}\r\n\r\n/* Create the form for editing a task */\r\nfunction renderEditTaskForm() {\r\n    const currentTask = getCurrentProject().getCurrentTask();\r\n\r\n    // Submit function for editing a task\r\n    const editTaskFunction = () => {\r\n        editTaskFromForm(currentTask);\r\n        editTaskCardInformation(currentTask);\r\n        getCurrentProject().sortIncompleteTasks();\r\n        clearPage();\r\n        renderProjectPage(getCurrentProject());\r\n    }\r\n\r\n    generateBaseTaskForm(\"task-edit-form\", \"Edit Task\", \"Edit\", editTaskFunction);\r\n\r\n    // Fill the form fields with current information\r\n    document.querySelector(\"#task-title\").placeholder = document.querySelector(\"#task-title\").value = currentTask.getTitle();\r\n    document.querySelector(\"#task-desc\").placeholder = document.querySelector(\"#task-desc\").value = currentTask.getDescription();\r\n    document.querySelector(\"#task-date\").value = currentTask.getDueDate();\r\n\r\n    // Highlight the currently selected priority\r\n    const priorityBtn = document.querySelector(`input[name='priority'][value='${currentTask.getPriority()}']`);\r\n    priorityBtn.checked = true;\r\n}\r\n\r\n/* Create the form base for edit and create step forms */\r\nfunction generateBaseStepForm(formID, formTitle, formType, submitFunction) {\r\n        // All form fields for steps\r\n        const stepTextFormFields = [\r\n            {labelText: \"Title:\", inputName: \"title\", inputType: \"text\", id: \"step-title\", classes: [\"title-input\"], minlength: 1, maxLength: 40},\r\n        ]\r\n        const formClass = \"create-edit-form\";\r\n        const organizerType = Organizers.STEP;\r\n\r\n        generateCreateEditFormBase(stepTextFormFields, formID, formTitle, formType, formClass, organizerType, submitFunction);\r\n}\r\n\r\n/* Create the form for creating a new step */\r\nfunction renderCreateStepForm() {\r\n    generateBaseStepForm(\"step-creation-form\", \"New Step\", \"Create\", createStepFromForm);\r\n}\r\n\r\n/* Create the form for editing a step */\r\nfunction renderEditStepForm() {\r\n    const currentStep = getCurrentProject().getCurrentTask().getCurrentStep();\r\n\r\n    // Submit function for editing a step\r\n    const editStepFunction = () => {\r\n        editStepFromForm(currentStep);\r\n        editStepCardInformation(currentStep);\r\n    }\r\n\r\n    generateBaseStepForm(\"step-edit-form\", \"Edit Step\", \"Edit\", editStepFunction);\r\n\r\n    // Fill the form fields with current information\r\n    document.querySelector(\"#step-title\").placeholder = document.querySelector(\"#step-title\").value = currentStep.getTitle();\r\n}\r\n\r\n/* Create the form for confirming organizer deletion */\r\nfunction renderDeleteForm(deleteFunction, organizerType) {\r\n    const form = generateFormBase((\"confirm-delete-form\"), (\"Delete \" + organizerType + \"?\"), \"delete-form\");\r\n\r\n    // Appending elements\r\n    addFormButtons(\"Organizer\", \"Delete\", form, deleteFunction);\r\n\r\n    renderForm(form);\r\n}\r\n\r\n/* Create the form for deleting a project */\r\nfunction renderDeleteProjectForm() {\r\n    const deleteFunction = () => {\r\n        deleteProject(getCurrentProject());\r\n        removeFromSidebarProjects(getCurrentProject());\r\n        if (document.querySelector(\".project-header-container\") !== null) {\r\n            clearPage();\r\n            renderAllProjectsPage(getProjects());\r\n        }\r\n        else {\r\n            deleteProjectCard(getCurrentProject());\r\n        }\r\n        setCurrentProject(null);\r\n    }\r\n\r\n    renderDeleteForm(deleteFunction, Organizers.PROJECT);\r\n}\r\n\r\n/* Create the form for deleting a task */\r\nfunction renderDeleteTaskForm() {\r\n    const currentTask = getCurrentProject().getCurrentTask();\r\n    const deleteFunction = () => {\r\n        getCurrentProject().removeFromIncompleteTasks(currentTask);\r\n        getCurrentProject().removeFromCompletedTasks(currentTask);\r\n        deleteTaskCard(currentTask);\r\n        getCurrentProject().setCurrentTask(null);\r\n    }\r\n\r\n    renderDeleteForm(deleteFunction, Organizers.TASK);\r\n}\r\n\r\n/* Create the form for deleting a step */\r\nfunction renderDeleteStepForm() {\r\n    const deleteFunction = () => {\r\n        const currentTask = getCurrentProject().getCurrentTask();\r\n        const currentStep = currentTask.getCurrentStep();\r\n        currentTask.removeFromIncompleteSteps(currentStep);\r\n        deleteStepCard(currentStep);\r\n        currentTask.setCurrentStep(null);\r\n    }\r\n\r\n    renderDeleteForm(deleteFunction, Organizers.STEP);\r\n}\r\n\r\n/* Create the form for changing project colour */\r\nfunction renderColourPickerForm() {\r\n    const form = generateFormBase(\"colour-form\", \"Pick A Colour\", \"colour-form\");\r\n\r\n    // Appending elements\r\n    form.appendChild(radioFieldGenerator.generateColourRadioButtons());\r\n    addFormButtons(Organizers.PROJECT, \"Colour\", form, () => {\r\n        editProjectColourFromForm(getCurrentProject());\r\n        editSidebarProjectColour(getCurrentProject());\r\n        if (document.querySelector(\".project-header-container\") !== null) {\r\n            editProjectPageColour(getCurrentProject());\r\n        }\r\n        else {\r\n            editProjectCardColour(getCurrentProject());\r\n        }\r\n    });\r\n\r\n    renderForm(form);\r\n\r\n    // Highlight the currently selected colour\r\n    const colourBtn = document.querySelector(`.colour-radio-btn[id^=\"colour-\"][id$=\"${getCurrentProject().getColour().toLowerCase()}\"]`);\r\n    colourBtn.checked = true;\r\n}\r\n\r\nconst formContainer = document.createElement(\"div\");\r\nformContainer.classList.add(\"form-container\");\r\n\r\nexport { generateFormModal, renderCreateProjectForm, renderEditProjectForm, renderCreateTaskForm, renderEditTaskForm, renderCreateStepForm, renderEditStepForm, renderDeleteProjectForm, renderDeleteTaskForm, renderDeleteStepForm, renderColourPickerForm }","/* Create a label for a form field */\r\nfunction generateLabel(formField) {\r\n    const fieldLabel = document.createElement(\"label\");\r\n    fieldLabel.textContent = formField.labelText;\r\n    fieldLabel.classList.add(\"form-label\");\r\n    fieldLabel.for = formField.id;\r\n\r\n    return fieldLabel;\r\n}\r\n\r\n/* Create a title form field */\r\nfunction generateTitleField(formField) {\r\n    // Input\r\n    const fieldInput = document.createElement(\"input\");\r\n    fieldInput.type = formField.inputType;\r\n    fieldInput.id = formField.id;\r\n    formField.classes.forEach(className => {\r\n        fieldInput.classList.add(className);\r\n    });\r\n    fieldInput.name = formField.inputName;\r\n    fieldInput.minLength = formField.minLength;\r\n    fieldInput.maxLength = formField.maxLength;\r\n\r\n    return fieldInput;\r\n}\r\n\r\n/* Create a description form field */\r\nfunction generateDescriptionField(formField) {\r\n    const fieldInput = document.createElement(formField.inputType);\r\n    fieldInput.id = formField.id;\r\n    formField.classes.forEach(className => {\r\n        fieldInput.classList.add(className);\r\n    });\r\n    fieldInput.name = formField.inputName;\r\n    fieldInput.minLength = formField.minLength;\r\n    fieldInput.maxLength = formField.maxLength;\r\n    \r\n    return fieldInput;\r\n}   \r\n\r\n/* Create a date form field */\r\nfunction generateDateField(formField) {\r\n    const fieldInput = document.createElement(\"input\");\r\n    fieldInput.type = formField.inputType;\r\n    fieldInput.id = formField.id;\r\n    formField.classes.forEach(className => {\r\n        fieldInput.classList.add(className);\r\n    });\r\n    fieldInput.name = formField.inputName;\r\n    \r\n    return fieldInput;\r\n}\r\n\r\n/* Create a set a set of text fields */\r\nexport default function generateTextFields(fields, parent) {\r\n    fields.forEach(formField => {\r\n        const fieldContainer = document.createElement(\"div\");\r\n        fieldContainer.classList.add(\"field-container\");\r\n    \r\n        // Appending elementsrequired\r\n        fieldContainer.appendChild(generateLabel(formField));\r\n        if (formField.inputName ===  \"title\") {\r\n            fieldContainer.appendChild(generateTitleField(formField));\r\n        }\r\n        else if (formField.inputName ===  \"desc\") {\r\n            fieldContainer.appendChild(generateDescriptionField(formField));\r\n        }\r\n        else if (formField.inputName ===  \"date\") {\r\n            fieldContainer.appendChild(generateDateField(formField));\r\n        }\r\n\r\n        // Adding required status\r\n        fieldContainer.required = formField.required;\r\n\r\n        parent.appendChild(fieldContainer);\r\n    })\r\n}","/* Creates the submit form button */\r\nfunction createFormSubmitButtonListener(btn, submitFunction, modal) {\r\n    btn.addEventListener(\"click\", (e) => {\r\n        e.preventDefault();\r\n        submitFunction();\r\n        modal.style.display = \"none\";\r\n    });\r\n}\r\n\r\n/* Creates the cancel form button */\r\nfunction createFormCancelButtonListener(btn, modal) {\r\n    btn.addEventListener(\"click\", (e) => {\r\n        e.preventDefault();\r\n        modal.style.display = \"none\";\r\n    });\r\n}\r\n\r\nexport { createFormSubmitButtonListener, createFormCancelButtonListener }","import projectFactory from \"./factories/projectFactory.js\";\r\nimport { renderAllProjectsPage, clearPage } from \"../../display/display.js\";\r\nimport { addToSidebarProjects } from \"../../display/sidebar/sidebarProjectsGenerator.js\";\r\nimport { saveProjectsToLocalStorage } from \"../../common/localStorage/index.js\";\r\nimport { deserializeTask } from \"./task.js\";\r\n\r\n/* Creates the default project that stores all unassigned tasks */\r\nfunction createDefaultProject() {\r\n    const projectID = getNextProjectCount();\r\n\r\n    const defaultProject = projectFactory(\r\n        \"Miscellaneous\", \r\n        \"Default project\",\r\n        projectID,\r\n    )\r\n\r\n    projects.push(defaultProject);\r\n\r\n    // Save change locally\r\n    saveProjectsToLocalStorage(getSerializedProjects());\r\n}\r\n\r\n/* Create a new project */\r\nfunction createProject(title, description) {\r\n    const projectID = getNextProjectCount();\r\n\r\n    const newProject = projectFactory(\r\n        title,\r\n        description,\r\n        projectID,\r\n    )\r\n\r\n    addToProjects(newProject);\r\n    setCurrentProject(newProject);\r\n\r\n    // Save change locally\r\n    saveProjectsToLocalStorage(getSerializedProjects());\r\n}\r\n\r\n/* Delete an existing project */\r\nfunction deleteProject(project) {\r\n    projects.forEach((projectItem, index) => {\r\n        if (projectItem.getProjectID() === project.getProjectID()) {\r\n            projects.splice(index, 1);\r\n            \r\n            return;\r\n        }\r\n    })\r\n\r\n    // Save change locally\r\n    saveProjectsToLocalStorage(getSerializedProjects());\r\n}\r\n\r\n/* Returns project count and increments it */\r\nfunction getNextProjectCount() {\r\n    const count = projectCount;\r\n    projectCount++;\r\n    return count;\r\n}\r\n\r\n/* Creates a project from creation form */\r\nfunction createProjectFromForm() {\r\n    const title = document.querySelector(\"#project-title\").value;\r\n    const desc = document.querySelector(\"#project-desc\").value;\r\n\r\n    createProject(title, desc);\r\n    clearPage();\r\n    renderAllProjectsPage(projects);\r\n    addToSidebarProjects(getCurrentProject());\r\n}\r\n\r\n/* Edits a project based on information in edit form */\r\nfunction editProjectFromForm(project) {\r\n    const newTitle = document.querySelector(\"#project-title\").value;\r\n    const newDesc = document.querySelector(\"#project-desc\").value;\r\n\r\n    project.setTitle(newTitle);\r\n    project.setDescription(newDesc);\r\n\r\n    // Save change locally\r\n    saveProjectsToLocalStorage(getSerializedProjects());\r\n}\r\n\r\n/* Edits the colour of a project based on colour picker form */\r\nfunction editProjectColourFromForm(project) {\r\n    const newColour = document.querySelector(\"input[type='radio']:checked\").value;\r\n\r\n    project.setColour(newColour);\r\n}\r\n\r\nfunction getProjects() {\r\n    return projects;\r\n}\r\n\r\nfunction addToProjects(newProject) {\r\n    projects.push(newProject);\r\n}\r\n\r\nfunction setProjects(newProjects) {\r\n    projects = newProjects;\r\n}\r\n\r\nfunction getCurrentProject() {\r\n    return currentProject;\r\n}\r\n\r\nfunction setCurrentProject(newProject) {\r\n    currentProject = newProject;\r\n}\r\n\r\n/* Convert the project to a JSON-friendly format */\r\nfunction serializeProject(project) {\r\n    const title = project.getTitle();\r\n    const desc = project.getDescription();\r\n    const colour = project.getColour();\r\n    const incompleteTasks = project.getSerializedIncompleteTasks();\r\n    const completedTasks = project.getSerializedCompletedTasks();\r\n\r\n    return {\r\n        title,\r\n        desc,\r\n        incompleteTasks,\r\n        completedTasks,\r\n        colour,\r\n    }\r\n}\r\n\r\n/* Create a project from JSON format data */\r\nfunction deserializeProject(project) {\r\n    // Creating project from data\r\n    createProject(project.title, project.desc);\r\n    const newProject = getCurrentProject();\r\n\r\n    // Adding all tasks\r\n    project.incompleteTasks.forEach(task => {\r\n        deserializeTask(newProject, task);\r\n    })\r\n    project.completedTasks.forEach(task => {\r\n        deserializeTask(newProject, task);\r\n    })\r\n\r\n    // Adding colour\r\n    newProject.setColour(project.colour);\r\n}\r\n\r\n/* Convert the project to a JSON-friendly format */\r\nfunction getSerializedProjects() {\r\n    const serializedProjects = [];\r\n    projects.forEach(project => {\r\n        serializedProjects.push(serializeProject(project));\r\n    })\r\n\r\n    return serializedProjects;\r\n}\r\n\r\nlet projectCount = 0;\r\nlet projects = [];\r\nlet currentProject = null;\r\n\r\nexport { \r\n    createDefaultProject, createProject, createProjectFromForm,  \r\n    editProjectFromForm, editProjectColourFromForm,\r\n    getProjects, setProjects, deleteProject,\r\n    getCurrentProject, setCurrentProject,\r\n    getSerializedProjects, deserializeProject\r\n}","import { generateTaskCards, editTaskCardInformation, setTaskCardCompleted } from \"./tasksCardHandler.js\";\r\nimport { editStepCardInformation, setStepCardCompleted } from \"./stepsCardHandler.js\";\r\nimport { generateActionButtons } from \"../utility/actionButtons.js\";\r\nimport { Actions } from \"../../models/enums/actionButtons.js\";\r\nimport { projectColourButtonListener, projectCreateTaskButtonListener, projectDeleteButtonListener, projectEditButtonListener } from \"../../common/eventListeners/actionButtonListeners/projectActionButtonListeners.js\";\r\n\r\n/* Create the page showing all info for a selected project */\r\nfunction renderProjectPage(project) {\r\n    /* Create the header displaying project info and actions */\r\n    function generateHeader(project) {\r\n        /* Display project details */\r\n        function generateProjectDetails(project) {\r\n            const projectHeaderInfo = document.createElement(\"span\");\r\n            projectHeaderInfo.classList.add(\"project-header-details\");\r\n\r\n            // Title\r\n            const projectTitle = document.createElement(\"h2\");\r\n            projectTitle.textContent = project.getTitle();\r\n            projectTitle.classList.add(\"project-header-title\");\r\n\r\n            // Description\r\n            const projectDescription = document.createElement(\"p\");\r\n            projectDescription.textContent = project.getDescription();\r\n            projectDescription.classList.add(\"project-header-description\");\r\n\r\n            // Append Elements\r\n            projectHeaderInfo.appendChild(projectTitle);\r\n            projectHeaderInfo.appendChild(projectDescription);\r\n\r\n            return projectHeaderInfo;\r\n        }\r\n\r\n        // Project Buttons to be created\r\n        const projectButtons = [\r\n            {classNames: [Actions.CREATE], src: \"../src/assets/icons/add.svg\", alt: \"\", title: \"Add New Task\",\r\n            event: () => {\r\n                projectCreateTaskButtonListener\r\n                projectCreateTaskButtonListener(project);\r\n            }},\r\n            {classNames: [Actions.COLOUR], src: \"../src/assets/icons/paint.svg\", alt: \"\", title: \"Colour Project\",\r\n            event: () => {\r\n                projectColourButtonListener(project);\r\n            }},\r\n            {classNames: [Actions.EDIT, \"edit-project\"], src: \"../src/assets/icons/edit.svg\", alt: \"\", title: \"Edit Project\",\r\n            event: () => {\r\n                projectEditButtonListener(project);\r\n            }},\r\n            {classNames: [Actions.DELETE], src: \"../src/assets/icons/delete.svg\", alt: \"\", title: \"Delete Project\",\r\n            event: () => {\r\n                projectDeleteButtonListener(project);\r\n            }},\r\n        ]\r\n\r\n        const projectHeader = document.createElement(\"div\");\r\n        projectHeader.classList.add(\"project-header-container\");\r\n        // Link to project\r\n        projectHeader.setAttribute(\"data-project-id\", project.getProjectID());\r\n        projectHeader.style.backgroundColor = project.getColour();\r\n\r\n        // Append Elements\r\n        projectHeader.appendChild(generateProjectDetails(project));\r\n        projectHeader.appendChild(generateActionButtons(projectButtons));\r\n\r\n        return projectHeader;\r\n    }\r\n\r\n    /* Create the list of tasks and their steps */\r\n    function generateContent(project) {\r\n        const taskListContainer = document.createElement(\"div\");\r\n        taskListContainer.classList.add(\"task-list-container\");\r\n\r\n        // Incomplete tasks section header\r\n        const taskSectionDivider = document.createElement(\"h2\");\r\n        taskSectionDivider.textContent = \"Tasks\"\r\n        taskSectionDivider.classList.add(\"section-divider\");\r\n\r\n        // List of incomplete tasks\r\n        const incompleteTasksList = document.createElement(\"ul\");\r\n        incompleteTasksList.classList.add(\"task-list\", \"incomplete-task-list\");\r\n\r\n        // Generate incomplete tasks\r\n        taskListContainer.appendChild(taskSectionDivider);\r\n        generateTaskCards(project.getIncompleteTasks(), incompleteTasksList);\r\n        taskListContainer.appendChild(incompleteTasksList);\r\n\r\n        // Completed tasks section header\r\n        const completedSectionDivider = document.createElement(\"h2\");\r\n        completedSectionDivider.textContent = \"Completed Tasks\"\r\n        completedSectionDivider.classList.add(\"section-divider\");\r\n\r\n        // List of completed tasks\r\n        const completedTasksList = document.createElement(\"ul\");\r\n        completedTasksList.classList.add(\"task-list\", \"completed-task-list\");\r\n\r\n        // Generate completed tasks\r\n        taskListContainer.appendChild(completedSectionDivider);\r\n        generateTaskCards(project.getCompletedTasks(), completedTasksList);\r\n        taskListContainer.appendChild(completedTasksList);\r\n\r\n        return taskListContainer;\r\n    }\r\n\r\n    // Appending Header\r\n    const header = document.querySelector(\".header\");\r\n    header.appendChild(generateHeader(project));\r\n\r\n    // Appending Body\r\n    const body = document.querySelector(\".content-body\");\r\n    body.appendChild(generateContent(project));\r\n\r\n    // Update the visual status of newly added cards\r\n    updateCompletionStatus(project);\r\n}\r\n\r\n/* Updates the completion status of cards on the project page */\r\nfunction updateCompletionStatus(project) {\r\n    // Visually marking the completed steps of incomplete tasks as completed\r\n    project.getIncompleteTasks().forEach(task => {\r\n        task.getCompletedSteps().forEach(step => {\r\n            const stepCard = document.querySelector(`[data-task-id=\"${step.getTaskID()}\"][data-step-id=\"${step.getStepID()}\"]`);\r\n            setStepCardCompleted(stepCard);\r\n        })\r\n    })\r\n\r\n    // Visually marking the complete tasks as completed\r\n    project.getCompletedTasks().forEach(task => {\r\n        const taskCard = document.querySelector(`[data-task-id=\"${task.getTaskID()}\"]`);\r\n\r\n        setTaskCardCompleted(taskCard);\r\n\r\n        // Visually marking their completed steps as completed\r\n        task.getCompletedSteps().forEach(step => {\r\n            const stepCard = document.querySelector(`[data-task-id=\"${step.getTaskID()}\"][data-step-id=\"${step.getStepID()}\"]`);\r\n            setStepCardCompleted(stepCard);\r\n        })\r\n    })\r\n}\r\n\r\n/* Updates the project page if project information is edited */\r\nfunction editProjectPageInformation(project) {\r\n    document.querySelector(\".project-header-title\").textContent = project.getTitle();\r\n    document.querySelector(\".project-header-description\").textContent = project.getDescription();\r\n}\r\n\r\n/* Updates the project page if project colour is edited */\r\nfunction editProjectPageColour(project) {\r\n    const projectHeader = document.querySelector(\".project-header-container\");\r\n    projectHeader.style.backgroundColor = project.getColour();\r\n}\r\n\r\nexport { renderProjectPage, editProjectPageInformation, editProjectPageColour, editTaskCardInformation, editStepCardInformation }","import { generateActionButtons, disableActionButtons, enableActionButtons } from \"../utility/actionButtons.js\";\r\nimport { Actions } from \"../../models/enums/actionButtons.js\";\r\nimport { getCurrentProject } from \"../../models/organizers/project.js\";\r\nimport { createStepStatusListener } from \"../../common/eventListeners/checkboxListeners.js\";\r\nimport { stepDeleteButtonListener, stepEditButtonListener } from \"../../common/eventListeners/actionButtonListeners/stepActionButtonListeners.js\";\r\n\r\n/* Create a list of steps for a task */\r\nfunction generateStepCards(steps, parent) {\r\n    /* Create a step item */\r\n    function generateStepCard(step) {\r\n\r\n        // Step buttons to be created\r\n        const stepButtons = [\r\n            {classNames: [Actions.EDIT, \"edit-step\"], src: \"../src/assets/icons/edit.svg\", alt: \"Edit Step Button\", title: \"Edit Step\",\r\n            event: () => {\r\n                stepEditButtonListener(step);\r\n            }},\r\n            {classNames: [Actions.DELETE], src: \"../src/assets/icons/delete.svg\", alt: \"Delete Step Button\", title: \"Delete Step\",\r\n            event: () => {\r\n                stepDeleteButtonListener(step)\r\n            }},\r\n        ]\r\n\r\n        const stepItem = document.createElement(\"li\");\r\n        stepItem.classList.add(\"project-list-item\", \"step-card\");\r\n        // Link to task\r\n        stepItem.setAttribute(\"data-project-id\", step.getProjectID());\r\n        stepItem.setAttribute(\"data-task-id\", step.getTaskID());\r\n        stepItem.setAttribute(\"data-step-id\", step.getStepID());\r\n\r\n        // Step information\r\n        const stepInfo = document.createElement(\"span\");\r\n        stepInfo.classList.add(\"project-list-item-info\");\r\n\r\n        // Completion checkbox\r\n        const completedCheckbox = document.createElement(\"input\");\r\n        completedCheckbox.classList.add(\"completion-checkbox\");\r\n        completedCheckbox.type = \"checkbox\";\r\n        completedCheckbox.name = \"\";\r\n        completedCheckbox.id = \"\";\r\n\r\n        createStepStatusListener(completedCheckbox);\r\n\r\n        stepInfo.appendChild(completedCheckbox);\r\n\r\n        // Title\r\n        const stepTitle = document.createElement(\"h4\");\r\n        stepTitle.textContent = step.getTitle();\r\n\r\n        // Action buttons for steps\r\n        const stepActionButtons = generateActionButtons(stepButtons);\r\n\r\n        // Append Elements\r\n        stepInfo.appendChild(stepTitle);\r\n        stepItem.appendChild(stepInfo);\r\n        stepItem.appendChild(stepActionButtons);\r\n\r\n        return stepItem;\r\n    }\r\n\r\n    // Add all steps to the list\r\n    steps.forEach(step => {\r\n        // Mark current step\r\n        getCurrentProject().getCurrentTask().setCurrentStep(step);\r\n\r\n        parent.appendChild(generateStepCard(step));\r\n    });\r\n}\r\n\r\n/* Updates the step card if step information is edited */\r\nfunction editStepCardInformation(step) {\r\n    const stepCard = document.querySelector(`[data-task-id=\"${step.getTaskID()}\"][data-step-id=\"${step.getStepID()}\"]`);\r\n    \r\n    // Editing information\r\n    const stepCardTitle = stepCard.firstChild.lastChild;\r\n    stepCardTitle.textContent = step.getTitle();\r\n}\r\n\r\n/* Modifies a step card once it has been marked as completed */\r\nfunction setStepCardCompleted(stepCard) {\r\n    // Visually marking as complete\r\n    stepCard.classList.add(\"completed\");\r\n    const checkbox = stepCard.firstChild.firstChild;\r\n    checkbox.checked = true;\r\n\r\n    // Disabling action buttons\r\n    const editButton = stepCard.lastChild.firstChild;\r\n    disableActionButtons([editButton]);\r\n}\r\n\r\n/* Modifies a step card once it has been marked as incomplete */\r\nfunction setStepCardIncomplete(stepCard) {\r\n    // Visually marking as incomplete\r\n    stepCard.classList.remove(\"completed\");\r\n    const checkbox = stepCard.firstChild.firstChild;\r\n    checkbox.checked = false;\r\n\r\n    // Re-enabling action buttons\r\n    const editButton = stepCard.lastChild.firstChild;\r\n    enableActionButtons([editButton]);\r\n}\r\n\r\n/* Removes a deleted steps card */\r\nfunction deleteStepCard(step) {\r\n    const stepCard = document.querySelector(`.step-card[data-task-id=\"${step.getTaskID()}\"][data-step-id=\"${step.getStepID()}\"]`);\r\n\r\n    stepCard.remove();\r\n}\r\n\r\nexport { generateStepCards, editStepCardInformation, setStepCardCompleted, setStepCardIncomplete, deleteStepCard }","import { getCurrentProject } from \"../../../models/organizers/project.js\";\r\nimport * as forms from \"../../../display/forms/formGenerator.js\";\r\nimport { setCurrentTaskFromID } from \"../utility/index.js\";\r\n\r\n/* Create the edit step button listener */\r\nfunction stepEditButtonListener(step) {\r\n    setCurrentTaskFromID(getCurrentProject().getIncompleteTasks(), String(step.getTaskID()));\r\n    getCurrentProject().getCurrentTask().setCurrentStep(step);\r\n    forms.renderEditStepForm();\r\n}\r\n\r\n/* Create the delete step button listener */\r\nfunction stepDeleteButtonListener(step) {\r\n    setCurrentTaskFromID(getCurrentProject().getIncompleteTasks(), String(step.getTaskID()));\r\n    getCurrentProject().getCurrentTask().setCurrentStep(step);\r\n    forms.renderDeleteStepForm();\r\n}\r\n\r\nexport { stepEditButtonListener, stepDeleteButtonListener }","import stepFactory from \"./factories/stepFactory.js\";\r\nimport { clearPage, renderProjectPage } from \"../../display/display.js\";\r\nimport { getCurrentProject, getSerializedProjects } from \"./project.js\";\r\nimport { saveProjectsToLocalStorage } from \"../../common/localStorage/index.js\";\r\nimport { Status } from \"../enums/status.js\";\r\n\r\n/* Create a new step and adds to a task */\r\nfunction createStep(task, title) {\r\n    const projectID = task.getProjectID();\r\n    const taskID = task.getTaskID();\r\n    const stepID = task.getNextStepCount();\r\n    const newStep = stepFactory(title, projectID, taskID, stepID);\r\n\r\n    task.addToIncompleteSteps(newStep);\r\n    task.setCurrentStep(newStep);\r\n\r\n    // Save change locally\r\n    saveProjectsToLocalStorage(getSerializedProjects());\r\n}\r\n\r\n/* Creates a step from creation form */\r\nfunction createStepFromForm() {\r\n    const title = document.querySelector(\"#step-title\").value;\r\n\r\n    createStep(getCurrentProject().getCurrentTask(), title);\r\n    clearPage();\r\n    renderProjectPage(getCurrentProject());\r\n}\r\n\r\n/* Edits a step based on information in edit form */\r\nfunction editStepFromForm(step) {\r\n    const newTitle = document.querySelector(\"#step-title\").value;\r\n\r\n    step.setTitle(newTitle);\r\n\r\n    // Save change locally\r\n    saveProjectsToLocalStorage(getSerializedProjects());\r\n}\r\n\r\n/* Convert the step to a JSON-friendly format */\r\nfunction serializeStep(step) {\r\n    const title = step.getTitle();\r\n    const status = step.getStatus();\r\n\r\n    return {\r\n        title,\r\n        status,\r\n    }\r\n}\r\n\r\n/* Create a step from JSON format data */\r\nfunction deserializeStep(task, step) {\r\n    // Creating step from data\r\n    createStep(task, step.title);\r\n    const newStep = task.getCurrentStep();\r\n\r\n    // Adding to appropriate location\r\n    if (step.status === Status.COMPLETED) {\r\n        newStep.setStatus(Status.COMPLETED);\r\n        task.removeFromIncompleteSteps();\r\n    }\r\n}\r\n\r\nexport { \r\n    createStep, \r\n    createStepFromForm, editStepFromForm, \r\n    serializeStep, deserializeStep\r\n}","import { Status } from \"../../models/enums/status.js\";\r\nimport { getCurrentProject } from \"../../models/organizers/project.js\";\r\nimport { completeTask } from \"../../models/organizers/task.js\";\r\nimport { clearPage, renderProjectPage } from \"../../display/display.js\";\r\nimport { setStepCardCompleted, setStepCardIncomplete } from \"../../display/projectPage/stepsCardHandler.js\";\r\nimport { setCurrentTaskFromID, setCurrentStepFromID } from \"./utility\";\r\n\r\n/* Handles toggling the completion status logic for a task */\r\nfunction taskStatusToggleListener(checkbox) {\r\n    const taskCard = checkbox.parentElement.parentElement;\r\n    // Searches both lists the current task\r\n    setCurrentTaskFromID(getCurrentProject().getIncompleteTasks(), String(taskCard.getAttribute(\"data-task-id\")));\r\n    setCurrentTaskFromID(getCurrentProject().getCompletedTasks(), String(taskCard.getAttribute(\"data-task-id\")));\r\n\r\n    const task = getCurrentProject().getCurrentTask();\r\n\r\n    // Toggle the tasks complete status\r\n    task.swapStatus();\r\n\r\n    // Introduce a slight visual delay\r\n    setTimeout(() => {\r\n        // Call the template function based on the completion status\r\n        if (task.getStatus() === Status.COMPLETED) {\r\n            setTaskStatusCompleteHandler(task);\r\n        } else {\r\n            setTaskStatusIncompleteHandler(task);\r\n        }\r\n    }, 100);\r\n}\r\n\r\n/* Handles marking a task as completed */\r\nfunction setTaskStatusCompleteHandler(task) {\r\n    getCurrentProject().removeFromIncompleteTasks(task);\r\n    // Moves the card wrapper to the completed tasks section \r\n    clearPage();\r\n    renderProjectPage(getCurrentProject());\r\n}\r\n\r\n/* Handles marking a task as incomplete */\r\nfunction setTaskStatusIncompleteHandler(task) {\r\n    getCurrentProject().removeFromCompletedTasks(task);\r\n    // Moves the card wrapper to the incomplete tasks section \r\n    clearPage();\r\n    renderProjectPage(getCurrentProject());\r\n}\r\n\r\n/* Handles initialization of the event listener for marking the completion status of tasks */\r\nfunction createTaskStatusListener(checkbox) {\r\n    checkbox.addEventListener(\"change\", () => taskStatusToggleListener(checkbox));\r\n}\r\n\r\n/* Handles toggling the completion status logic for a step */\r\nfunction stepStatusToggleListener(checkbox) {\r\n    const stepCard = checkbox.parentElement.parentElement;\r\n    setCurrentTaskFromID(getCurrentProject().getIncompleteTasks(), String(stepCard.getAttribute(\"data-task-id\")));\r\n    // Searches both lists the current step\r\n    const currentTask = getCurrentProject().getCurrentTask();\r\n    setCurrentStepFromID(currentTask.getIncompleteSteps(), String(stepCard.getAttribute(\"data-step-id\")));\r\n    setCurrentStepFromID(currentTask.getCompletedSteps(), String(stepCard.getAttribute(\"data-step-id\")));\r\n\r\n    const step = currentTask.getCurrentStep();\r\n\r\n    // Toggle the steps complete status\r\n    step.swapStatus();\r\n\r\n    // Introduce a slight visual delay\r\n    setTimeout(() => {\r\n        // Call the template function based on the completion status\r\n        if (step.getStatus() === Status.COMPLETED) {\r\n            setStepStatusCompleteHandler(step);\r\n        } else {\r\n            setStepStatusIncompleteHandler(step);\r\n        }\r\n    }, 100);\r\n}\r\n\r\n/* Handles marking a step as completed */\r\nfunction setStepStatusCompleteHandler(step) {\r\n    getCurrentProject().getCurrentTask().removeFromIncompleteSteps(step);\r\n    const stepCard = document.querySelector(`[data-task-id=\"${step.getTaskID()}\"][data-step-id=\"${step.getStepID()}\"]`);\r\n    setStepCardCompleted(stepCard);\r\n\r\n    // Moves the card to the completed steps list\r\n    const parent = stepCard.parentElement;\r\n    parent.nextSibling.appendChild(stepCard);\r\n}\r\n\r\n/* Handles marking a step as incomplete */\r\nfunction setStepStatusIncompleteHandler(step) {\r\n    getCurrentProject().getCurrentTask().removeFromCompletedSteps(step);\r\n    const stepCard = document.querySelector(`[data-task-id=\"${step.getTaskID()}\"][data-step-id=\"${step.getStepID()}\"]`);\r\n    setStepCardIncomplete(stepCard);\r\n\r\n    // Moves the card to the incomplete steps list\r\n    const parent = stepCard.parentElement;\r\n    parent.previousSibling.appendChild(stepCard);\r\n}\r\n\r\n/* Handles initialization of the event listener for marking the completion status of steps */\r\nfunction createStepStatusListener(checkbox) {\r\n    checkbox.addEventListener(\"change\", () => stepStatusToggleListener(checkbox));\r\n}\r\n\r\nexport { createTaskStatusListener, createStepStatusListener }","import { generateStepCards } from \"./stepsCardHandler.js\";\r\nimport { disableActionButtons, enableActionButtons, generateActionButtons } from \"../utility/actionButtons.js\";\r\nimport { Actions } from \"../../models/enums/actionButtons.js\";\r\nimport { getCurrentProject } from \"../../models/organizers/project.js\";\r\nimport { createTaskStatusListener } from \"../../common/eventListeners/checkboxListeners.js\";\r\nimport { taskCreateStepButtonListener, taskDeleteButtonListener, taskEditButtonListener } from \"../../common/eventListeners/actionButtonListeners/taskActionButtonListeners.js\";\r\n\r\n/* Create a list of tasks for a project */\r\nfunction generateTaskCards(tasks, parent) {\r\n    /* Create a task item */\r\n    function generateTask(task) {\r\n        /* Create the checkbox and details of the task */\r\n        function generateTaskHeader(task) {\r\n            /* Display information about the task */\r\n            function generateTaskDetails(task) {\r\n                const taskDetails = document.createElement(\"div\");\r\n                taskDetails.classList.add(\"project-list-task-details\");\r\n                \r\n                const titleContainer = document.createElement(\"div\");\r\n                titleContainer.classList.add(\"project-title-container\");\r\n\r\n                // Title\r\n                const taskTitle = document.createElement(\"h3\");\r\n                taskTitle.textContent = task.getTitle();\r\n\r\n                // Priority\r\n                const taskPriority = document.createElement(\"p\");\r\n                taskPriority.textContent = task.getPriority();\r\n                const priorityClass = \"priority-\" + task.getPriority().toLowerCase();\r\n                taskPriority.classList.add(\"priority-text\", priorityClass);\r\n\r\n                // Description\r\n                const taskDescription = document.createElement(\"p\");\r\n                taskDescription.textContent = task.getDescription();\r\n\r\n                // Due date\r\n                const taskDate = document.createElement(\"p\");\r\n                taskDate.textContent = task.getDueDate() || \"No Due Date\";;\r\n\r\n                titleContainer.appendChild(taskTitle);\r\n                titleContainer.appendChild(taskPriority);\r\n                taskDetails.appendChild(titleContainer);\r\n                taskDetails.appendChild(taskDescription);\r\n                taskDetails.appendChild(taskDate);\r\n\r\n                return taskDetails;\r\n            }\r\n\r\n            const projectListItemInfo = document.createElement(\"span\");\r\n            projectListItemInfo.classList.add(\"project-list-item-info\");\r\n\r\n            // Completion checkbox\r\n            const completedCheckbox = document.createElement(\"input\");\r\n            completedCheckbox.classList.add(\"completion-checkbox\");\r\n            completedCheckbox.type = \"checkbox\";\r\n            completedCheckbox.name = \"\";\r\n            completedCheckbox.id = \"\";\r\n\r\n            createTaskStatusListener(completedCheckbox);\r\n\r\n            // Append elements\r\n            projectListItemInfo.appendChild(completedCheckbox);\r\n            projectListItemInfo.appendChild(generateTaskDetails(task));\r\n\r\n            return projectListItemInfo;\r\n        }\r\n\r\n        // Task buttons to be created\r\n        const taskButtons = [\r\n            {classNames: [Actions.CREATE], src: \"../src/assets/icons/add.svg\", alt: \"Create Step Button\", title: \"Add New Step\",\r\n            event: () => {\r\n                taskCreateStepButtonListener(task)\r\n            }},\r\n            {classNames: [Actions.EDIT, \"edit-task\"], src: \"../src/assets/icons/edit.svg\", alt: \"Edit Task Button\", title: \"Edit Task\",\r\n            event: () => {\r\n                taskEditButtonListener(task);\r\n            }},\r\n            {classNames: [Actions.DELETE], src: \"../src/assets/icons/delete.svg\", alt: \"Delete Task Button\", title: \"Delete Task\",\r\n            event: () => {\r\n                taskDeleteButtonListener(task);\r\n            }},\r\n        ]\r\n\r\n        // Task information\r\n        const taskItem = document.createElement(\"div\");\r\n        taskItem.classList.add(\"project-list-item\", \"task-card\");\r\n        // Link to task\r\n        taskItem.setAttribute(\"data-project-id\", task.getProjectID());\r\n        taskItem.setAttribute(\"data-task-id\", task.getTaskID());\r\n\r\n        // Append task information elements\r\n        taskItem.appendChild(generateTaskHeader(task));\r\n        taskItem.appendChild(generateActionButtons(taskButtons));\r\n\r\n        return taskItem;\r\n    }\r\n\r\n    // Add all tasks to the list\r\n    tasks.forEach(task => {\r\n        // Mark current task\r\n        getCurrentProject().setCurrentTask(task);\r\n\r\n        const projectTaskItem = document.createElement(\"li\");\r\n        projectTaskItem.classList.add(\"project-task-item\");\r\n\r\n        // List of all incomplete steps for current task\r\n        const incompleteStepsList = document.createElement(\"ul\");\r\n        incompleteStepsList.classList.add(\"steps-list\", \"incomplete-steps-list\");\r\n\r\n        // List of all completed steps for current task\r\n        const completedStepsList = document.createElement(\"ul\");\r\n        completedStepsList.classList.add(\"steps-list\", \"completed-steps-list\");\r\n\r\n        // Create task\r\n        projectTaskItem.appendChild(generateTask(task));\r\n\r\n        // Append step lists\r\n        projectTaskItem.appendChild(incompleteStepsList);\r\n        projectTaskItem.appendChild(completedStepsList);\r\n\r\n        // Create steps\r\n        generateStepCards(task.getIncompleteSteps(), incompleteStepsList);\r\n        generateStepCards(task.getCompletedSteps(), completedStepsList);\r\n\r\n        parent.appendChild(projectTaskItem);\r\n    })\r\n}\r\n\r\n/* Updates the task card if task information is edited */\r\nfunction editTaskCardInformation(task) {\r\n    const taskCard = document.querySelector(`[data-task-id=\"${task.getTaskID()}\"]`);\r\n    \r\n    // Grabbing information to edit\r\n    const taskInformation = taskCard.firstChild.lastChild;\r\n    const taskTitle = taskInformation.firstChild.firstChild;\r\n    const taskPriority = taskInformation.firstChild.lastChild;\r\n    const taskDesc = taskInformation.firstChild.nextSibling;\r\n    const taskDueDate = taskInformation.lastChild;\r\n    \r\n    // Editing information\r\n    taskTitle.textContent = task.getTitle();\r\n    taskPriority.textContent = task.getPriority();\r\n    taskDesc.textContent = task.getDescription();\r\n    taskDueDate.textContent = task.getDueDate() || \"No Due Date\";\r\n\r\n    // Replacing priority classlist\r\n    taskPriority.className = \"\";\r\n    const priorityClass = \"priority-\" + task.getPriority().toLowerCase();\r\n    taskPriority.classList.add(\"priority-text\", priorityClass);\r\n}\r\n\r\n/* Modifies a task card once it has been marked as completed */\r\nfunction setTaskCardCompleted(taskCard) {\r\n    // Visually marking as complete\r\n    taskCard.classList.add(\"completed\");\r\n    const taskCheckbox = taskCard.firstChild.firstChild;\r\n    taskCheckbox.checked = true;\r\n\r\n    // Disabling action buttons\r\n    const createButton = taskCard.lastChild.firstChild;\r\n    const editButton = createButton.nextSibling;\r\n    disableActionButtons([createButton, editButton]);\r\n\r\n    // Visually marking all incomplete steps as completed\r\n    const incompleteSteps = taskCard.nextSibling;\r\n    for (let stepCard of incompleteSteps.children) {\r\n        stepCard.classList.add(\"completed\");\r\n        const checkbox = stepCard.firstChild.firstChild;\r\n        checkbox.checked = true;\r\n        checkbox.disabled = true;\r\n\r\n        // Disabling action buttons\r\n        const editButton = stepCard.lastChild.firstChild;\r\n        disableActionButtons([editButton]);\r\n    }\r\n\r\n    // Disabling the checkbox of completed steps\r\n    const completedSteps = taskCard.nextSibling.nextSibling;\r\n    for (let stepCard of completedSteps.children) {\r\n        const checkbox = stepCard.firstChild.firstChild;\r\n        checkbox.disabled = true;\r\n    }\r\n}\r\n\r\n/* Modifies a task card once it has been marked as completed */\r\nfunction setTaskCardIncomplete(taskCard) {\r\n    // Visually marking as incomplete\r\n    taskCard.classList.remove(\"completed\");\r\n    const checkbox = taskCard.firstChild.firstChild;\r\n    checkbox.checked = false;\r\n\r\n    // Re-enabling action buttons\r\n    const createButton = taskCard.lastChild.firstChild;\r\n    const editButton = createButton.nextSibling;\r\n    enableActionButtons([createButton, editButton]);\r\n\r\n    // Visually remarking all incomplete steps as incomplete\r\n    const incompleteSteps = taskCard.nextSibling;\r\n    for (let stepCard of incompleteSteps.children) {\r\n        stepCard.classList.remove(\"completed\");\r\n        const checkbox = stepCard.firstChild.firstChild;\r\n        checkbox.checked = false;\r\n        checkbox.disabled = false;\r\n\r\n        // Re-enabling action buttons\r\n        const editButton = stepCard.lastChild.firstChild;\r\n        enableActionButtons([editButton]);\r\n    }\r\n\r\n    // Enabling the checkbox of completed steps\r\n    const completedSteps = taskCard.nextSibling.nextSibling;\r\n    for (let stepCard of completedSteps.children) {\r\n        const checkbox = stepCard.firstChild.firstChild;\r\n        checkbox.disabled = false;\r\n    }\r\n}\r\n\r\n/* Removes a deleted tasks card */\r\nfunction deleteTaskCard(task) {\r\n    const taskCard = document.querySelector(`.task-card[data-task-id=\"${task.getTaskID()}\"]`);\r\n\r\n    taskCard.parentElement.remove();\r\n}\r\n\r\nexport { generateTaskCards, editTaskCardInformation, setTaskCardCompleted, setTaskCardIncomplete, deleteTaskCard }","import { getCurrentProject } from \"../../../models/organizers/project.js\";\r\nimport * as forms from \"../../../display/forms/formGenerator.js\";\r\n\r\n/* Create the task create step button listener */\r\nfunction taskCreateStepButtonListener(task) {\r\n    getCurrentProject().setCurrentTask(task);\r\n    forms.renderCreateStepForm();\r\n}\r\n\r\n/* Create the edit task button listener */\r\nfunction taskEditButtonListener(task) {\r\n    getCurrentProject().setCurrentTask(task);\r\n    forms.renderEditTaskForm();\r\n}\r\n\r\n/* Create the delete task button listener */\r\nfunction taskDeleteButtonListener(task) {\r\n    getCurrentProject().setCurrentTask(task);\r\n    forms.renderDeleteTaskForm();\r\n}\r\n\r\nexport { taskCreateStepButtonListener, taskEditButtonListener, taskDeleteButtonListener }","import taskFactory from \"./factories/taskFactory.js\";\r\nimport { Status } from \"../enums/status.js\";\r\nimport { getCurrentProject, getSerializedProjects } from \"./project.js\";\r\nimport { saveProjectsToLocalStorage } from \"../../common/localStorage/index.js\";\r\nimport { deserializeStep } from \"./step.js\";\r\n\r\n/* Create a new task and adds to a project */\r\nfunction createTask(project, title, description, dueDate, priority) {\r\n    const projectID = project.getProjectID();\r\n    const taskID = project.getNextTaskCount();\r\n    const newTask = taskFactory(title, description, dueDate, priority, projectID, taskID);\r\n\r\n    project.addToIncompleteTasks(newTask);\r\n    project.setCurrentTask(newTask);\r\n\r\n    // Save change locally\r\n    saveProjectsToLocalStorage(getSerializedProjects());\r\n}\r\n\r\n/* Creates a task from creation form */\r\nfunction createTaskFromForm() {\r\n    const title = document.querySelector(\"#task-title\").value;\r\n    const desc = document.querySelector(\"#task-desc\").value;\r\n    const date = document.querySelector(\"#task-date\").value;\r\n    const priority = document.querySelector('input[name=\"priority\"]:checked').value;\r\n\r\n    createTask(getCurrentProject(), title, desc, date, priority);\r\n}\r\n\r\n/* Edits a task based on information in edit form */\r\nfunction editTaskFromForm(task) {\r\n    const newTitle = document.querySelector(\"#task-title\").value;\r\n    const newDesc = document.querySelector(\"#task-desc\").value;\r\n    const newDate = document.querySelector(\"#task-date\").value;\r\n    const newPriority = document.querySelector(\"input[name='priority']:checked\").value;\r\n\r\n    task.setTitle(newTitle);\r\n    task.setDescription(newDesc);\r\n    task.setDueDate(newDate);\r\n    task.setPriority(newPriority);\r\n\r\n    // Save change locally\r\n    saveProjectsToLocalStorage(getSerializedProjects());\r\n}\r\n\r\n/* Complete a task and convert all steps to required status*/\r\nfunction completeTask(task) {\r\n    task.setStatus(Status.COMPLETED);\r\n    // Mark incomplete steps\r\n    task.getIncompleteSteps().forEach(step => {\r\n        step.setStatus(Status.COMPLETED);\r\n    });\r\n}\r\n\r\n/* Convert the task to a JSON-friendly format */\r\nfunction serializeTask(task) {\r\n    const title = task.getTitle();\r\n    const desc = task.getDescription();\r\n    const dueDate = task.getDueDate();\r\n    const priority = task.getPriority();\r\n    const status = task.getStatus();\r\n    const incompleteSteps = task.getSerializedIncompleteSteps();\r\n    const completedSteps = task.getSerializedCompletedSteps();\r\n\r\n    return {\r\n        title,\r\n        desc,\r\n        dueDate,\r\n        priority,\r\n        status,\r\n        incompleteSteps,\r\n        completedSteps,\r\n    }\r\n}\r\n\r\n/* Create a task from JSON format data */\r\nfunction deserializeTask(project, task) {\r\n    // Creating task from data\r\n    createTask(project, task.title, task.desc, task.dueDate, task.priority);\r\n    const newTask = project.getCurrentTask()\r\n\r\n    // Adding all steps\r\n    task.incompleteSteps.forEach(step => {\r\n        deserializeStep(newTask, step);\r\n    })\r\n    task.completedSteps.forEach(step => {\r\n        deserializeStep(newTask, step);\r\n    })\r\n\r\n    // Adding to appropriate location\r\n    if (task.status === Status.COMPLETED) {\r\n        newTask.setStatus(Status.COMPLETED);\r\n        project.removeFromIncompleteTasks(newTask);\r\n    }\r\n}\r\n\r\nexport { \r\n    createTask, \r\n    completeTask, \r\n    createTaskFromForm, editTaskFromForm, \r\n    serializeTask, deserializeTask\r\n}","import { setCurrentProject } from \"../../../models/organizers/project.js\";\r\nimport * as forms from \"../../../display/forms/formGenerator.js\";\r\n\r\n/* Create the project create task button listener */\r\nfunction projectCreateTaskButtonListener(project) {\r\n    forms.renderCreateTaskForm(project);\r\n}\r\n\r\n/* Create the edit project colour button listener */\r\nfunction projectColourButtonListener(project) {\r\n    setCurrentProject(project);\r\n    forms.renderColourPickerForm(); \r\n}\r\n\r\n/* Create the edit projetc button listener */\r\nfunction projectEditButtonListener(project) {\r\n    setCurrentProject(project);\r\n    forms.renderEditProjectForm();\r\n}\r\n\r\n/* Create the delete project button listener */\r\nfunction projectDeleteButtonListener(project) {\r\n    setCurrentProject(project);\r\n    forms.renderDeleteProjectForm();\r\n}\r\n\r\nexport { projectCreateTaskButtonListener, projectColourButtonListener, projectEditButtonListener, projectDeleteButtonListener }","import renderSidebar from \"./sidebar\";\r\n// import renderSidebar from \"./sidebar.js\"\r\nimport { editSidebarProjectTitle, editSidebarProjectColour } from \"./sidebar/sidebarProjectsGenerator.js\";\r\nimport { renderProjectPage, editProjectPageColour} from \"./projectPage\";\r\nimport { renderAllProjectsPage, editProjectCardColour } from \"./allProjectsPage\";\r\nimport * as forms from \"./forms/formGenerator.js\";\r\n\r\n/* Remove all content from the header */\r\nfunction clearHeader() {\r\n    const header = document.querySelector(\".header\");\r\n    header.replaceChildren();\r\n}\r\n\r\n/* Remove all content from the body */\r\nfunction clearBody() {\r\n    const body = document.querySelector(\".content-body\");\r\n    body.replaceChildren();\r\n}\r\n\r\n/* Remove all content from the content sections */\r\nfunction clearPage() {\r\n    clearHeader();\r\n    clearBody();\r\n}\r\n\r\n/* Remove all content from the sidebar */\r\nfunction clearSidebar() {\r\n    const sidebar = document.querySelector(\".sidebar\");\r\n    sidebar.replaceChildren();\r\n}\r\n\r\nexport { \r\n    renderSidebar, \r\n    editSidebarProjectColour,\r\n    editSidebarProjectTitle,\r\n    renderProjectPage,\r\n    editProjectPageColour, \r\n    renderAllProjectsPage,\r\n    editProjectCardColour,\r\n    forms,\r\n    clearPage,\r\n    clearSidebar,\r\n}","import { Status, isValidStatus } from \"../../enums/status.js\";\r\n\r\n/* Creates a single instance of a step object */\r\nexport default function stepFactory(title, projectID, taskID, stepID) {\r\n    let status = Status.INCOMPLETE;\r\n\r\n    function getTitle() {\r\n        return title;\r\n    }\r\n\r\n    function setTitle(newTitle) {\r\n        title = newTitle;\r\n    }\r\n\r\n    function getStatus() {\r\n        return status;\r\n    }\r\n    \r\n    function setStatus(newStatus) {\r\n        if (isValidStatus(newStatus)) {\r\n            status = newStatus;\r\n        }\r\n    }\r\n\r\n    function swapStatus() {\r\n        if (status === Status.COMPLETED) {\r\n            status = Status.INCOMPLETE;\r\n        }\r\n        else {\r\n            status = Status.COMPLETED;\r\n        }\r\n    }\r\n\r\n    function getProjectID() {\r\n        return projectID;\r\n    }\r\n\r\n    function getTaskID() {\r\n        return taskID;\r\n    }\r\n\r\n    function getStepID() {\r\n        return stepID;\r\n    }\r\n\r\n    return { \r\n        getTitle, setTitle, \r\n        getStatus, setStatus, swapStatus, \r\n        getProjectID, getTaskID, getStepID,\r\n    }\r\n}","import { saveProjectsToLocalStorage } from \"../../../common/localStorage/index.js\";\r\nimport { isValidPriority } from \"../../enums/priority.js\";\r\nimport { Status, isValidStatus } from \"../../enums/status.js\";\r\nimport { getSerializedProjects } from \"../project.js\";\r\nimport { serializeStep } from \"../step.js\";\r\n\r\n/* Creates a single instance of a task object */\r\nexport default function taskFactory(title, description, dueDate, priority, projectID, taskID) {\r\n    let stepCount = 0;\r\n    const incompleteSteps = [];\r\n    const completedSteps = [];\r\n    let status = Status.INCOMPLETE;\r\n    let currentStep = null;\r\n\r\n    /* Returns step count and increments it */\r\n    function getNextStepCount() {\r\n        const count = stepCount;\r\n        stepCount++;\r\n\r\n        return count;\r\n    }\r\n\r\n    function getTitle() {\r\n        return title;\r\n    }\r\n\r\n    function setTitle(newTitle) {\r\n        title = newTitle;\r\n    }\r\n\r\n    function getDescription() {\r\n        return description;\r\n    }\r\n    \r\n    function setDescription(newDescription) {\r\n        description = newDescription;\r\n    }\r\n\r\n    function getDueDate() {\r\n        return dueDate;\r\n    }\r\n    \r\n    function setDueDate(newDueDate) {\r\n        dueDate = newDueDate;\r\n    }\r\n\r\n    function getPriority() {\r\n        return priority;\r\n    }\r\n    \r\n    function setPriority(newPriority) {\r\n        if (isValidPriority(newPriority)) {\r\n            priority = newPriority;\r\n        }\r\n    }\r\n\r\n    function getStatus() {\r\n        return status;\r\n    }\r\n    \r\n    function setStatus(newStatus) {\r\n        if (isValidStatus(newStatus)) {\r\n            status = newStatus;\r\n        }\r\n    }\r\n\r\n    function swapStatus() {\r\n        if (status === Status.COMPLETED) {\r\n            status = Status.INCOMPLETE;\r\n        }\r\n        else {\r\n            status = Status.COMPLETED;\r\n        }\r\n    }\r\n\r\n    function getIncompleteSteps() {\r\n        return incompleteSteps;\r\n    }\r\n\r\n    /* Add a step to the task */\r\n    function addToIncompleteSteps(step) {\r\n        incompleteSteps.push(step);\r\n    }\r\n\r\n    /* Remove a step from incompleteSteps (and add to completedSteps if valid) */\r\n    function removeFromIncompleteSteps(step) {\r\n        incompleteSteps.forEach((stepElement, index) => {\r\n            if (step.getStepID() === stepElement.getStepID()) {\r\n                incompleteSteps.splice(index, 1);\r\n\r\n                // Conditionally add to completedSteps\r\n                if (step.getStatus() === Status.COMPLETED) {\r\n                    addToCompletedSteps(step);\r\n                }\r\n\r\n                // Save change locally\r\n                saveProjectsToLocalStorage(getSerializedProjects());\r\n\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    /* Converts all incomplete steps to a JSON-friendly format */\r\n    function getSerializedIncompleteSteps() {\r\n        const serializedSteps = [];\r\n        incompleteSteps.forEach(step => {\r\n            serializedSteps.push(serializeStep(step));\r\n        });\r\n\r\n        return serializedSteps;\r\n    }\r\n\r\n    function getCompletedSteps() {\r\n        return completedSteps;\r\n    }\r\n\r\n    /* Add a completed step to the task */\r\n    function addToCompletedSteps(step) {\r\n        completedSteps.push(step);\r\n    }\r\n\r\n    /* Remove a completed step from the task (and add to incompleteSteps if valid) */\r\n    function removeFromCompletedSteps(step) {\r\n        completedSteps.forEach((stepElement, index) => {\r\n            if (step.getStepID() === stepElement.getStepID()) {\r\n                completedSteps.splice(index, 1);\r\n\r\n                // Conditionally add to incompleteSteps\r\n                if (step.getStatus() === Status.INCOMPLETE) {\r\n                    addToIncompleteSteps(step);\r\n                }\r\n\r\n                // Save change locally\r\n                saveProjectsToLocalStorage(getSerializedProjects());\r\n\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    /* Converts all completed steps to a JSON-friendly format */\r\n    function getSerializedCompletedSteps() {\r\n        const serializedSteps = [];\r\n        completedSteps.forEach(step => {\r\n            serializedSteps.push(serializeStep(step));\r\n        });\r\n\r\n        return serializedSteps;\r\n    }\r\n\r\n    function getProjectID() {\r\n        return projectID;\r\n    }\r\n\r\n    function getTaskID() {\r\n        return taskID;\r\n    }\r\n\r\n    function getCurrentStep() {\r\n        return currentStep;\r\n    }\r\n\r\n    function setCurrentStep(newStep) {\r\n        currentStep = newStep;\r\n    }\r\n\r\n    return { \r\n        getTitle, setTitle, \r\n        getDescription, setDescription, \r\n        getDueDate, setDueDate, \r\n        getPriority, setPriority, \r\n        getStatus, setStatus, swapStatus, \r\n        getIncompleteSteps, addToIncompleteSteps, removeFromIncompleteSteps, getSerializedIncompleteSteps,\r\n        getCompletedSteps, addToCompletedSteps, removeFromCompletedSteps, getSerializedCompletedSteps,\r\n        getProjectID, getTaskID, \r\n        getNextStepCount,\r\n        getCurrentStep, setCurrentStep, \r\n    };\r\n}","import { saveProjectsToLocalStorage } from \"../../../common/localStorage/index.js\";\r\nimport { DefaultColour, isValidColour } from \"../../enums/colours.js\";\r\nimport { prioritySort } from \"../../enums/priority.js\";\r\nimport { Status } from \"../../enums/status.js\";\r\nimport { getSerializedProjects } from \"../project.js\";\r\nimport { serializeTask } from \"../task.js\";\r\n\r\n/* Creates a single instance of a project object */\r\nexport default function projectFactory(title, description, projectID) {\r\n    let colour = DefaultColour;\r\n    let taskCount = 0;\r\n    const incompleteTasks = [];\r\n    const completedTasks = [];\r\n    let currentTask = null;\r\n\r\n    /* Returns task count and increments it */\r\n    function getNextTaskCount() {\r\n        const count = taskCount;\r\n        taskCount++;\r\n        \r\n        return count;\r\n    }\r\n\r\n    function getTitle() {\r\n        return title;\r\n    }\r\n\r\n    function setTitle(newTitle) {\r\n        title = newTitle;\r\n    }\r\n\r\n    function getDescription() {\r\n        return description;\r\n    }\r\n    \r\n    function setDescription(newDescription) {\r\n        description = newDescription;\r\n    }\r\n\r\n    function getColour() {\r\n        return colour;\r\n    }\r\n\r\n    function setColour(newColour) {\r\n        if (isValidColour(newColour)) {\r\n            colour = newColour;\r\n        }\r\n\r\n        // Save change locally\r\n        saveProjectsToLocalStorage(getSerializedProjects());\r\n    }\r\n\r\n    function getIncompleteTasks() {\r\n        return incompleteTasks;\r\n    }\r\n\r\n    /* Add a task to the project */\r\n    function addToIncompleteTasks(task) {\r\n        incompleteTasks.push(task);\r\n        sortIncompleteTasks();\r\n    }\r\n\r\n    /* Remove an incomplete task from the project (and add to completeTasks if valid) */\r\n    function removeFromIncompleteTasks(task) {\r\n        incompleteTasks.forEach((taskElement, index) => {\r\n            if (task.getTaskID() === taskElement.getTaskID()) {\r\n                incompleteTasks.splice(index, 1);\r\n\r\n                // Conditionally add to completedTasks\r\n                if (task.getStatus() === Status.COMPLETED) {\r\n                    addToCompletedTasks(task);\r\n                }\r\n\r\n                // Save change locally\r\n                saveProjectsToLocalStorage(getSerializedProjects());\r\n\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    /* Converts all incomplete tasks to a JSON-friendly format */\r\n    function getSerializedIncompleteTasks() {\r\n        const serializedTasks = [];\r\n        incompleteTasks.forEach(task => {\r\n            serializedTasks.push(serializeTask(task));\r\n        });\r\n\r\n        return serializedTasks;\r\n    }\r\n\r\n    function sortIncompleteTasks() {\r\n        incompleteTasks.sort(prioritySort);\r\n    }\r\n\r\n    function getCompletedTasks() {\r\n        return completedTasks;\r\n    }\r\n\r\n    /* Add a completed task to the project */\r\n    function addToCompletedTasks(task) {\r\n        completedTasks.push(task);\r\n        sortCompletedTasks();\r\n    }\r\n\r\n    /* Remove a completed task from the project (and add to incompletedTasks if valid) */\r\n    function removeFromCompletedTasks(task) {\r\n        completedTasks.forEach((taskElement, index) => {\r\n            if (task.getTaskID() === taskElement.getTaskID()) {\r\n                completedTasks.splice(index, 1);\r\n\r\n                // Conditionally add to incompleteTasks\r\n                if (task.getStatus() === Status.INCOMPLETE) {\r\n                    addToIncompleteTasks(task);\r\n                }\r\n\r\n                // Save change locally\r\n                saveProjectsToLocalStorage(getSerializedProjects());\r\n\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    /* Converts all completed tasks to a JSON-friendly format */\r\n    function getSerializedCompletedTasks() {\r\n        const serializedTasks = [];\r\n        completedTasks.forEach(task => {\r\n            serializedTasks.push(serializeTask(task));\r\n        });\r\n\r\n        return serializedTasks;\r\n    }\r\n\r\n    function sortCompletedTasks() {\r\n        completedTasks.sort(prioritySort);\r\n    }\r\n\r\n    function getProjectID() {\r\n        return projectID;\r\n    }\r\n\r\n    function getCurrentTask() {\r\n        return currentTask;\r\n    }\r\n\r\n    function setCurrentTask(newTask) {\r\n        currentTask = newTask;\r\n    }\r\n\r\n    return { \r\n        getTitle, setTitle, \r\n        getDescription, setDescription, \r\n        getColour, setColour,\r\n        getIncompleteTasks, addToIncompleteTasks, removeFromIncompleteTasks, sortIncompleteTasks, getSerializedIncompleteTasks,\r\n        getCompletedTasks, addToCompletedTasks, removeFromCompletedTasks, sortCompletedTasks, getSerializedCompletedTasks,\r\n        getProjectID,\r\n        getNextTaskCount,\r\n        getCurrentTask, setCurrentTask, \r\n    };\r\n}","import \"./style.css\";\r\nimport { createDefaultProject, createProject, deserializeProject, getCurrentProject, getProjects, setProjects } from \"./models/organizers/project.js\";\r\nimport { createTask } from \"./models/organizers/task\";\r\nimport { createStep } from \"./models/organizers/step\";\r\nimport * as display from \"./display/display.js\";\r\nimport { createSidebarListeners } from \"./common/eventListeners/index.js\";\r\nimport { loadProjectsFromLocalStorage } from \"./common/localStorage/index.js\";\r\n\r\n// Importing local storage\r\nconst storageData = loadProjectsFromLocalStorage();\r\n// Load stored data\r\nif (storageData !== null) {\r\n    storageData.forEach(project => {\r\n        deserializeProject(project);\r\n    })\r\n}\r\n// Use default data\r\nelse {\r\n    createDefaultProject();\r\n\r\n    // // Work project/tasks/steps\r\n    // createProject(\"Work Meetings\", \"All things work meeting related!\");\r\n\r\n    // createTask(getProjects()[1], \"Monday Meetings\", \"All monday work meetings\", \"\", \"Med\");\r\n    // createStep(getProjects()[1].getIncompleteTasks()[0], \"Morning Meeting\");\r\n    // createStep(getProjects()[1].getIncompleteTasks()[0], \"Afternoon Meeting\");\r\n\r\n    // createTask(getProjects()[1], \"Presentation\", \"All work presentations\", \"\", \"None\");\r\n    // createStep(getProjects()[1].getIncompleteTasks()[1], \"Generate Financial Graphs\");\r\n    // createStep(getProjects()[1].getIncompleteTasks()[1], \"Check report draft for typos\");\r\n\r\n    // // School project/tasks/steps\r\n    // createProject(\"School\", \"All things school related!\");\r\n\r\n    // createTask(getProjects()[2], \"Presentations\", \"All work presentations\", \"\", \"High\");\r\n    // createStep(getProjects()[2].getIncompleteTasks()[0], \"Homework\");\r\n}\r\n\r\n// Load the initial page\r\ndisplay.renderSidebar(getProjects());\r\ndisplay.forms.generateFormModal(document.querySelector(\".content\"));\r\ndisplay.renderAllProjectsPage(getProjects());\r\ncreateSidebarListeners(getProjects());","import { renderSidebarProjects } from \"./sidebarProjectsGenerator.js\";\r\n\r\n/* Create the sidebar */\r\nexport default function renderSidebar(projects) {\r\n    const sidebar = document.querySelector(\".sidebar\");\r\n\r\n    const listContainer = document.createElement(\"div\");\r\n\r\n    // Logo\r\n    const logo = document.createElement(\"h1\");\r\n    logo.textContent = \"TODO\";\r\n    logo.classList.add(\"logo\");\r\n\r\n    // Section header\r\n    const projectHeader = document.createElement(\"h3\");\r\n    projectHeader.textContent = \"MY PROJECTS\"\r\n    projectHeader.classList.add(\"sidebar-heading\");\r\n\r\n    // Project list\r\n    const projectsList = document.createElement(\"ul\");\r\n    projectsList.classList.add(\"sidebar-projects-menu\");\r\n\r\n    // Appending elements\r\n    sidebar.appendChild(logo);\r\n    listContainer.appendChild(projectHeader);\r\n    renderSidebarProjects(projects, projectsList);\r\n    listContainer.appendChild(projectsList);\r\n    sidebar.appendChild(listContainer);\r\n}","import { renderAllProjectsPage, clearPage } from \"../../display/display.js\";\r\nimport { createProjectPageNavigationListeners } from \"./projectNavigationListeners.js\";\r\n\r\n/* Make the all projects sidebar button link to the all projects page */\r\nfunction createAllProjectsButtonListener(projects) {\r\n    const allProjectsButton = document.querySelector(\".all-projects-button\");\r\n\r\n    allProjectsButton.addEventListener(\"click\", () => {\r\n        clearPage();\r\n        renderAllProjectsPage(projects);\r\n    })\r\n}\r\n\r\n/* Give all sidebar project buttons functionality */\r\nexport default function createSidebarListeners(projects) {\r\n    createAllProjectsButtonListener(projects);\r\n    createProjectPageNavigationListeners(projects, \".sidebar-project-button\");\r\n}"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","nc","saveProjectsToLocalStorage","newProjects","localStorage","setItem","locals","Colours","NONE","PINK","PURPLE","BLUE","TEAL","GREEN","YELLOW","ORANGE","RED","DefaultColour","Priority","LOW","MED","HIGH","DefaultPriority","convertPriorityToValue","priority","prioritySort","x","y","xPriorityValue","getPriority","yPriorityValue","COMPLETED","INCOMPLETE","isValidStatus","status","values","includes","createProjectPageNavigationListeners","projects","className","querySelectorAll","forEach","project","String","getProjectID","getAttribute","addEventListener","clearPage","setCurrentProject","renderProjectPage","generateSidebarItem","title","iconFunction","sidebarItem","classList","add","itemTitle","textContent","generateAllProjectIcon","projectIcon","iconImage","src","generateProjectButton","projectItem","getTitle","iconColour","backgroundColor","generateProjectIcon","getColour","generateActionButtons","buttons","actionBtns","btn","actionButtonContainer","classNames","actionBtn","alt","eventFunction","stopPropagation","createActionButtonListener","event","disableActionButtons","button","disabled","Actions","CREATE","COLOUR","EDIT","DELETE","setCurrentTaskFromID","tasks","taskID","task","getTaskID","getCurrentProject","setCurrentTask","setCurrentStepFromID","steps","stepID","step","getStepID","getCurrentTask","setCurrentStep","generateRadioButtons","legend","fieldset","fieldContainer","Organizers","PROJECT","TASK","STEP","renderAllProjectsPage","createProjectButton","generateBaseProjectForm","createProjectFromForm","headerContainer","heading","generateHeader","projectCardGrid","projectCard","borderColor","projectCardDetails","projectName","projectDescription","getDescription","generateCardDetails","generateProjectCardButtons","generateContent","renderForm","form","modal","display","formContainer","replaceChildren","generateFormBase","formClass","formTitle","generateCreateEditFormBase","formFields","formID","formType","organizerType","submitFunction","radioButtons","parent","formField","fieldLabel","labelText","for","generateLabel","inputName","fieldInput","type","inputType","classes","name","minLength","maxLength","generateTitleField","generateDescriptionField","generateDateField","required","addFormButtons","actionType","btnIDPrefix","toLowerCase","submitBtn","preventDefault","createFormSubmitButtonListener","cancelBtn","createFormCancelButtonListener","minlength","rows","renderEditProjectForm","currentProject","newTitle","value","newDesc","setTitle","setDescription","getSerializedProjects","editProjectFromForm","lastChild","editProjectPageInformation","cardDetails","cardTitle","cardDescription","editProjectCardInformation","placeholder","generateBaseTaskForm","priorityValue","radioContainer","optionID","radioInput","radioLabel","generatePriorityOptions","generateBaseStepForm","renderDeleteForm","deleteFunction","renderDeleteProjectForm","removeFromSidebarProjects","getProjects","deleteProjectCard","renderColourPickerForm","colourValue","colourKey","keys","find","color","newColour","setColour","editProjectColourFromForm","editProjectPageColour","editProjectCardColour","checked","generateStepCards","generateStepCard","stepButtons","getIncompleteTasks","currentStep","getCurrentStep","editStepFromForm","stepEditButtonListener","currentTask","removeFromIncompleteSteps","stepDeleteButtonListener","stepItem","stepInfo","completedCheckbox","checkbox","stepCard","parentElement","getIncompleteSteps","getCompletedSteps","swapStatus","setTimeout","getStatus","setStepCardCompleted","nextSibling","setStepStatusCompleteHandler","removeFromCompletedSteps","setStepCardIncomplete","previousSibling","setStepStatusIncompleteHandler","stepStatusToggleListener","stepTitle","stepActionButtons","generateTaskCards","generateTask","taskButtons","createStepFromForm","taskCreateStepButtonListener","newDate","newPriority","setDueDate","setPriority","editTaskFromForm","taskInformation","taskTitle","taskPriority","taskDesc","taskDueDate","getDueDate","priorityClass","editTaskCardInformation","sortIncompleteTasks","taskEditButtonListener","removeFromIncompleteTasks","removeFromCompletedTasks","taskDeleteButtonListener","taskItem","projectListItemInfo","taskCard","getCompletedTasks","setTaskStatusCompleteHandler","setTaskStatusIncompleteHandler","taskStatusToggleListener","taskDetails","titleContainer","taskDescription","taskDate","generateTaskDetails","generateTaskHeader","projectTaskItem","incompleteStepsList","completedStepsList","projectCreateTaskButtonListener","desc","date","createTask","createTaskFromForm","projectButtons","projectColourButtonListener","projectEditButtonListener","projectDeleteButtonListener","projectHeader","projectHeaderInfo","projectTitle","generateProjectDetails","taskListContainer","taskSectionDivider","incompleteTasksList","completedSectionDivider","completedTasksList","createButton","incompleteSteps","children","completedSteps","setTaskCardCompleted","updateCompletionStatus","createStep","newStep","projectID","setStatus","newStatus","stepFactory","getNextStepCount","addToIncompleteSteps","serializeStep","deserializeStep","description","dueDate","newTask","stepCount","addToCompletedSteps","newDescription","newDueDate","isValidPriority","stepElement","getSerializedIncompleteSteps","serializedSteps","getSerializedCompletedSteps","taskFactory","getNextTaskCount","addToIncompleteTasks","serializeTask","deserializeTask","projectFactory","colour","taskCount","incompleteTasks","completedTasks","sort","addToCompletedTasks","sortCompletedTasks","isValidColour","taskElement","getSerializedIncompleteTasks","serializedTasks","getSerializedCompletedTasks","createProject","newProject","getNextProjectCount","addToProjects","projectCount","newProjectBtn","addProjectNavigationListener","addToSidebarProjects","serializedProjects","serializeProject","storageData","parse","getItem","deserializeProject","defaultProject","createDefaultProject","sidebar","listContainer","logo","projectsList","allProjectsButton","generateAllProjectsButton","renderSidebarProjects","formModal","createAllProjectsButtonListener","createSidebarListeners"],"sourceRoot":""}